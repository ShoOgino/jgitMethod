	/**
	 * {@inheritDoc}
	 *
	 * @throws IOException
	 *             if an I/O error occurs while accessing a git config or
	 *             executing {@code git lfs install} in an external process
	 * @throws InvalidConfigurationException
	 *             if a git configuration is invalid
	 * @throws InterruptedException
	 *             if the current thread is interrupted while waiting for the
	 *             {@code git lfs install} executed in an external process
	 */
	@Override
	public Void call() throws IOException, InvalidConfigurationException,
			InterruptedException {
		StoredConfig cfg = null;
		if (repository == null) {
			try {
				cfg = SystemReader.getInstance().getUserConfig();
			} catch (ConfigInvalidException e) {
				throw new InvalidConfigurationException(e.getMessage(), e);
			}
		} else {
			cfg = repository.getConfig();
		}

		cfg.setBoolean(ConfigConstants.CONFIG_FILTER_SECTION,
				ConfigConstants.CONFIG_SECTION_LFS,
				ConfigConstants.CONFIG_KEY_USEJGITBUILTIN, true);
		cfg.setBoolean(ConfigConstants.CONFIG_FILTER_SECTION,
				ConfigConstants.CONFIG_SECTION_LFS,
				ConfigConstants.CONFIG_KEY_REQUIRED, true);

		cfg.save();

		// try to run git lfs install, we really don't care if it is present
		// and/or works here (yet).
		ProcessBuilder builder = FS.DETECTED.runInShell("git", //$NON-NLS-1$
				repository == null ? ARGS_USER : ARGS_LOCAL);
		if (repository != null) {
			builder.directory(repository.isBare() ? repository.getDirectory()
					: repository.getWorkTree());
		}
		FS.DETECTED.runProcess(builder, null, null, (String) null);

		return null;
	}

