	@Override
	protected void doPost(HttpServletRequest req, HttpServletResponse res)
			throws ServletException, IOException {
		Writer w = new BufferedWriter(
				new OutputStreamWriter(res.getOutputStream(), UTF_8));

		Reader r = new BufferedReader(
				new InputStreamReader(req.getInputStream(), UTF_8));
		LfsRequest request = gson.fromJson(r, LfsRequest.class);
		String path = req.getPathInfo();

		res.setContentType(CONTENTTYPE_VND_GIT_LFS_JSON);
		LargeFileRepository repo = null;
		try {
			repo = getLargeFileRepository(request, path);
			if (repo == null) {
				sendError(res, w, SC_SERVICE_UNAVAILABLE,
						"LFS is not available"); //$NON-NLS-1$
			} else {
				res.setStatus(SC_OK);
				TransferHandler handler = TransferHandler
						.forOperation(request.operation, repo, request.objects);
				gson.toJson(handler.process(), w);
			}
		} catch (LfsValidationError e) {
			sendError(res, w, SC_UNPROCESSABLE_ENTITY, e.getMessage());
		} catch (LfsRepositoryNotFound e) {
			sendError(res, w, SC_NOT_FOUND, e.getMessage());
		} catch (LfsRepositoryReadOnly e) {
			sendError(res, w, SC_FORBIDDEN, e.getMessage());
		} catch (LfsException e) {
			sendError(res, w, SC_SERVICE_UNAVAILABLE, e.getMessage());
		} finally {
			w.flush();
		}
	}

