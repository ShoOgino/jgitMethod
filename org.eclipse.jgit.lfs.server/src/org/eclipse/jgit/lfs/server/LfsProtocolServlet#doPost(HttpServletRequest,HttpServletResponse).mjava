	@Override
	protected void doPost(HttpServletRequest req, HttpServletResponse res)
			throws ServletException, IOException {
		Writer w = new BufferedWriter(
				new OutputStreamWriter(res.getOutputStream(), UTF_8));

		Reader r = new BufferedReader(new InputStreamReader(req.getInputStream(), UTF_8));
		LfsRequest request = gson.fromJson(r, LfsRequest.class);
		String path = req.getPathInfo();

		LargeFileRepository repo = null;
		try {
			repo = getLargeFileRepository(request, path);
		} catch (LfsValidationError e) {
			sendError(res, SC_UNPROCESSABLE_ENTITY, e.getMessage());
			return;
		} catch (LfsRepositoryNotFound e) {
			sendError(res, SC_NOT_FOUND, e.getMessage());
			return;
		} catch (LfsRepositoryReadOnly e) {
			sendError(res, SC_FORBIDDEN, e.getMessage());
			return;
		} catch (LfsException e) {
			sendError(res, SC_SERVICE_UNAVAILABLE, e.getMessage());
			return;
		}
		if (repo == null) {
			res.setStatus(SC_SERVICE_UNAVAILABLE);
			return;
		}

		res.setStatus(SC_OK);
		res.setContentType(CONTENTTYPE_VND_GIT_LFS_JSON);
		TransferHandler handler = TransferHandler
				.forOperation(request.operation, repo, request.objects);
		gson.toJson(handler.process(), w);
		w.flush();
	}

