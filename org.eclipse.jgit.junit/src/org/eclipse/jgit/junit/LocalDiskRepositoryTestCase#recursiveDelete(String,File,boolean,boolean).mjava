	private static boolean recursiveDelete(final String testName,
			final File dir, boolean silent, boolean failOnError) {
		assert !(silent && failOnError);
		if (!dir.exists()) {
			return silent;
		}
		final File[] ls = dir.listFiles();
		if (ls != null) {
			for (int k = 0; k < ls.length; k++) {
				final File e = ls[k];
				if (e.isDirectory()) {
					silent = recursiveDelete(testName, e, silent, failOnError);
				} else {
					if (!e.delete()) {
						if (!silent) {
							reportDeleteFailure(testName, failOnError, e);
						}
						silent = !failOnError;
					}
				}
			}
		}
		if (!dir.delete()) {
			if (!silent) {
				reportDeleteFailure(testName, failOnError, dir);
			}
			silent = !failOnError;
		}
		return silent;
	}

