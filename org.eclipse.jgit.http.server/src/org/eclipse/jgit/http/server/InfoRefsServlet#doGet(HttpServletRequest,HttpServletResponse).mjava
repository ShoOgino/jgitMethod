	/** {@inheritDoc} */
	@Override
	public void doGet(final HttpServletRequest req,
			final HttpServletResponse rsp) throws IOException {
		// Assume a dumb client and send back the dumb client
		// version of the info/refs file.
		rsp.setContentType(HttpSupport.TEXT_PLAIN);
		rsp.setCharacterEncoding(UTF_8.name());

		final Repository db = getRepository(req);
		try (OutputStreamWriter out = new OutputStreamWriter(
				new SmartOutputStream(req, rsp, true),
				UTF_8)) {
			final RefAdvertiser adv = new RefAdvertiser() {
				@Override
				protected void writeOne(CharSequence line)
						throws IOException {
					// Whoever decided that info/refs should use a different
					// delimiter than the native git:// protocol shouldn't
					// be allowed to design this sort of stuff. :-(
					out.append(line.toString().replace(' ', '\t'));
				}

				@Override
				protected void end() {
					// No end marker required for info/refs format.
				}
			};
			adv.init(db);
			adv.setDerefTags(true);
			adv.send(db.getRefDatabase().getRefsByPrefix(Constants.R_REFS));
		}
	}

