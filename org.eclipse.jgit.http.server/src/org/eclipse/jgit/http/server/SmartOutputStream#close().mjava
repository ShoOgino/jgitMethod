	/** {@inheritDoc} */
	@Override
	public void close() throws IOException {
		super.close();

		if (!startedOutput) {
			// If output hasn't started yet, the entire thing fit into our
			// buffer. Try to use a proper Content-Length header, and also
			// deflate the response with gzip if it will be smaller.
			if (256 < this.length() && acceptsGzipEncoding(req)) {
				TemporaryBuffer gzbuf = new TemporaryBuffer.Heap(LIMIT);
				try {
					try (GZIPOutputStream gzip = new GZIPOutputStream(gzbuf)) {
						this.writeTo(gzip, null);
					}
					if (gzbuf.length() < this.length()) {
						rsp.setHeader(HDR_CONTENT_ENCODING, ENCODING_GZIP);
						writeResponse(gzbuf);
						return;
					}
				} catch (IOException err) {
					// Most likely caused by overflowing the buffer, meaning
					// its larger if it were compressed. Discard compressed
					// copy and use the original.
				}
			}
			writeResponse(this);
		}
	}

