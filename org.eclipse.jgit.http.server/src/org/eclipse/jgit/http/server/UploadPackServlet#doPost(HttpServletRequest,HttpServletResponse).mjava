	@Override
	public void doPost(final HttpServletRequest req,
			final HttpServletResponse rsp) throws IOException {
		if (!REQ_TYPE.equals(req.getContentType())) {
			rsp.sendError(SC_UNSUPPORTED_MEDIA_TYPE);
			return;
		}

		UploadPack up = (UploadPack) req.getAttribute(ATTRIBUTE_HANDLER);
		try {
			up.setBiDirectionalPipe(false);
			rsp.setContentType(RSP_TYPE);

			final SmartOutputStream out = new SmartOutputStream(req, rsp) {
				@Override
				public void flush() throws IOException {
					doFlush();
				}
			};
			up.upload(getInputStream(req), out, null);
			out.close();

		} catch (UploadPackMayNotContinueException e) {
			if (!e.isOutput())
				rsp.sendError(SC_SERVICE_UNAVAILABLE);
			return;

		} catch (IOException e) {
			getServletContext().log(HttpServerText.get().internalErrorDuringUploadPack, e);
			rsp.reset();
			rsp.sendError(SC_INTERNAL_SERVER_ERROR);
			return;
		}
	}

