	/**
	 * Writes the appropriate response to an info/refs request received by
	 * a smart service. In protocol v0, this starts with "#
	 * service=serviceName" followed by a flush packet, but this is not
	 * necessarily the case in other protocol versions.
	 * <p>
	 * The default implementation writes "# service=serviceName" and a
	 * flush packet, then calls {@link #advertise}. Subclasses should
	 * override this method if they support protocol versions other than
	 * protocol v0.
	 *
	 * @param req
	 *            request
	 * @param pckOut
	 *            destination of response
	 * @param serviceName
	 *            service name to be written out in protocol v0; may or may
	 *            not be used in other versions
	 * @throws IOException
	 * @throws ServiceNotEnabledException
	 * @throws ServiceNotAuthorizedException
	 */
	protected void respond(HttpServletRequest req,
			PacketLineOut pckOut, String serviceName)
			throws IOException, ServiceNotEnabledException,
			ServiceNotAuthorizedException {
		pckOut.writeString("# service=" + svc + '\n'); //$NON-NLS-1$
		pckOut.end();
		advertise(req, new PacketLineOutRefAdvertiser(pckOut));
	}

