	static void sendError(int statusCode, HttpServletRequest req,
			HttpServletResponse rsp) throws IOException {
		String svc = req.getParameter("service");
		String accept = req.getHeader(HDR_ACCEPT);

		if (svc != null && svc.startsWith("git-") && accept != null
				&& accept.contains("application/x-" + svc + "-advertisement")) {
			// Smart HTTP service request, use an ERR response.
			rsp.setContentType("application/x-" + svc + "-advertisement");

			SmartOutputStream buf = new SmartOutputStream(req, rsp);
			PacketLineOut out = new PacketLineOut(buf);
			out.writeString("# service=" + svc + "\n");
			out.end();
			out.writeString("ERR " + translate(statusCode));
			buf.close();
			return;
		}

		if (accept != null && accept.contains(UploadPackServlet.RSP_TYPE)) {
			// An upload-pack wants ACK or NAK, return ERR
			// and the client will print this instead.
			rsp.setContentType(UploadPackServlet.RSP_TYPE);
			SmartOutputStream buf = new SmartOutputStream(req, rsp);
			PacketLineOut out = new PacketLineOut(buf);
			out.writeString("ERR " + translate(statusCode));
			buf.close();
			return;
		}

		// Otherwise fail with an HTTP error code instead of an
		// application level message. This may not be as pretty
		// of a result for the user, but its better than nothing.
		//
		rsp.sendError(statusCode);
	}

