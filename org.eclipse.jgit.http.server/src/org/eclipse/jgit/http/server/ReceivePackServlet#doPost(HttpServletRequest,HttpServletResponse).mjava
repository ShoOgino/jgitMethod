	@Override
	public void doPost(final HttpServletRequest req,
			final HttpServletResponse rsp) throws IOException {
		if (!RECEIVE_PACK_REQUEST_TYPE.equals(req.getContentType())) {
			rsp.sendError(SC_UNSUPPORTED_MEDIA_TYPE);
			return;
		}

		SmartOutputStream out = new SmartOutputStream(req, rsp) {
			@Override
			public void flush() throws IOException {
				doFlush();
			}
		};

		ReceivePack rp = (ReceivePack) req.getAttribute(ATTRIBUTE_HANDLER);
		try {
			rp.setBiDirectionalPipe(false);
			rsp.setContentType(RECEIVE_PACK_RESULT_TYPE);

			rp.receive(getInputStream(req), out, null);
			out.close();
		} catch (UnpackException e) {
			// This should be already reported to the client.
			getServletContext().log(
					HttpServerText.get().internalErrorDuringReceivePack,
					e.getCause());
			consumeRequestBody(req);
			out.close();

		} catch (Throwable e) {
			getServletContext().log(HttpServerText.get().internalErrorDuringReceivePack, e);
			if (!rsp.isCommitted()) {
				rsp.reset();
				sendError(req, rsp, SC_INTERNAL_SERVER_ERROR);
			}
			return;
		}
	}

