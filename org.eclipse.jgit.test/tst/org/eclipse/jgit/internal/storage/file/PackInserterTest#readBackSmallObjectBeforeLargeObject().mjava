	@Test
	public void readBackSmallObjectBeforeLargeObject() throws Exception {
		WindowCacheConfig wcc = new WindowCacheConfig();
		wcc.setStreamFileThreshold(1024);
		wcc.install();

		ObjectId blobId1;
		ObjectId blobId2;
		ObjectId largeId;
		byte[] blob1 = Constants.encode("blob1");
		byte[] blob2 = Constants.encode("blob2");
		byte[] largeBlob = newLargeBlob();
		try (PackInserter ins = newInserter()) {
			assertThat(blob1.length, lessThan(ins.getBufferSize()));
			assertThat(largeBlob.length, greaterThan(ins.getBufferSize()));

			blobId1 = ins.insert(OBJ_BLOB, blob1);
			largeId = ins.insert(OBJ_BLOB, largeBlob);

			try (ObjectReader reader = ins.newReader()) {
				// A previous bug did not reset the file pointer to EOF after reading
				// back. We need to seek to something further back than a full buffer,
				// since the read-back code eagerly reads a full buffer's worth of data
				// from the file to pass to the inflater. If we seeked back just a small
				// amount, this step would consume the rest of the file, so the file
				// pointer would coincidentally end up back at EOF, hiding the bug.
				assertBlob(reader, blobId1, blob1);
			}

			blobId2 = ins.insert(OBJ_BLOB, blob2);

			try (ObjectReader reader = ins.newReader()) {
				assertBlob(reader, blobId1, blob1);
				assertBlob(reader, blobId2, blob2);
				assertBlob(reader, largeId, largeBlob);
			}

			ins.flush();
		}

		try (ObjectReader reader = db.newObjectReader()) {
				assertBlob(reader, blobId1, blob1);
				assertBlob(reader, blobId2, blob2);
				assertBlob(reader, largeId, largeBlob);
		}
	}

