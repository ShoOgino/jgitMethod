	@Test
	public void testForceUpdateMissingObject() throws IOException {
		String name = "refs/heads/abc";
		RefUpdate ru = updateRef(name);
		Result update = ru.update();
		assertEquals(Result.NEW, update);

		ObjectId bad =
				ObjectId.fromString("deadbeefdeadbeefdeadbeefdeadbeefdeadbeef");
		ru = db.updateRef(name);
		ru.setNewObjectId(bad);
		update = ru.forceUpdate();
		assertEquals(Result.FORCED, update);

		Ref ref = db.exactRef(name);
		assertNotNull(ref);
		assertFalse(ref.isPeeled());
		assertEquals(bad, ref.getObjectId());

		try (RevWalk rw = new RevWalk(db)) {
			rw.parseAny(ref.getObjectId());
			fail("Expected MissingObjectException");
		} catch (MissingObjectException expected) {
			assertEquals(bad, expected.getObjectId());
		}

		RefDirectory refdir = (RefDirectory) db.getRefDatabase();
		try {
			// Packing requires peeling, which fails.
			refdir.pack(Arrays.asList(name));
		} catch (MissingObjectException expected) {
			assertEquals(bad, expected.getObjectId());
		}
	}

