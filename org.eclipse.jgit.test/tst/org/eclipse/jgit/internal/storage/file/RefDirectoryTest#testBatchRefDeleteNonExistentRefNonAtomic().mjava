	@Test
	public void testBatchRefDeleteNonExistentRefNonAtomic()
			throws IOException {
		writeLooseRef("refs/heads/master", A);
		List<ReceiveCommand> commands = Arrays.asList(
				new ReceiveCommand(A, B, "refs/heads/master",
						ReceiveCommand.Type.UPDATE),
				new ReceiveCommand(A, zeroId(), "refs/heads/foo2",
						ReceiveCommand.Type.DELETE));
		BatchRefUpdate batchUpdate = refdir.newBatchUpdate();
		batchUpdate.setAtomic(false);
		batchUpdate.setAllowNonFastForwards(true);
		batchUpdate.addCommand(commands);
		batchUpdate.execute(new RevWalk(diskRepo), new StrictWorkMonitor());
		Map<String, Ref> refs = refdir.getRefs(RefDatabase.ALL);
		assertEquals(ReceiveCommand.Result.OK, commands.get(0).getResult());
		assertEquals(ReceiveCommand.Result.LOCK_FAILURE,
				commands.get(1).getResult());
		assertEquals("[HEAD, refs/heads/master]", refs.keySet().toString());
		assertEquals(B.getId(), refs.get("refs/heads/master").getObjectId());
	}

