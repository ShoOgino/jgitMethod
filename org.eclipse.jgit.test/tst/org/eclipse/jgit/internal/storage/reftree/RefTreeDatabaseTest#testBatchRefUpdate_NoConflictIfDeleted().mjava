	@Test
	public void testBatchRefUpdate_NoConflictIfDeleted() throws IOException {
		update("refs/heads/master", A);
		update("refs/heads/masters", B);
		ObjectId txnId = getTxnCommitted();

		List<ReceiveCommand> commands = Arrays.asList(
				command(A, B, "refs/heads/master"),
				command(null, A, "refs/heads/masters/x"),
				command(B, null, "refs/heads/masters"));
		BatchRefUpdate batchUpdate = refdb.newBatchUpdate();
		batchUpdate.setAllowNonFastForwards(true);
		batchUpdate.addCommand(commands);
		try (RevWalk rw = new RevWalk(repo)) {
			batchUpdate.execute(rw, NullProgressMonitor.INSTANCE);
		}
		assertNotEquals(txnId, getTxnCommitted());

		assertEquals(OK, commands.get(0).getResult());
		assertEquals(OK, commands.get(1).getResult());
		assertEquals(OK, commands.get(2).getResult());

		Map<String, Ref> refs = refdb.getRefs(ALL);
		assertEquals(
				"[refs/heads/master, refs/heads/masters/x]",
				refs.keySet().toString());
		assertEquals(A.getId(), refs.get("refs/heads/masters/x").getObjectId());
	}

