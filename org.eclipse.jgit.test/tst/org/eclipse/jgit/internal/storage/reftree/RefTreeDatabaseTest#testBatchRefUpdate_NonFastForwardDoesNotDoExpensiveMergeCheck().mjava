	@Test
	public void testBatchRefUpdate_NonFastForwardDoesNotDoExpensiveMergeCheck()
			throws IOException {
		update("refs/heads/master", B);
		ObjectId txnId = getTxnCommitted();

		List<ReceiveCommand> commands = Arrays.asList(
				command(B, A, "refs/heads/master"));
		BatchRefUpdate batchUpdate = refdb.newBatchUpdate();
		batchUpdate.setAllowNonFastForwards(true);
		batchUpdate.addCommand(commands);
		try (RevWalk rw = new RevWalk(repo) {
			@Override
			public boolean isMergedInto(RevCommit base, RevCommit tip) {
				fail("isMergedInto() should not be called");
				return false;
			}
		}) {
			batchUpdate.execute(rw, NullProgressMonitor.INSTANCE);
		}
		assertNotEquals(txnId, getTxnCommitted());

		Map<String, Ref> refs = refdb.getRefs(ALL);
		assertEquals(OK, commands.get(0).getResult());
		assertEquals(A.getId(), refs.get("refs/heads/master").getObjectId());
	}

