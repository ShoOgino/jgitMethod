	@Test
	public void testEntriesWithin() throws Exception {
		final DirCache dc = db.readDirCache();

		final String[] paths = { "a.", "a/b", "a/c", "a/d", "a0b" };
		final DirCacheEntry[] ents = new DirCacheEntry[paths.length];
		for (int i = 0; i < paths.length; i++) {
			ents[i] = new DirCacheEntry(paths[i]);
			ents[i].setFileMode(FileMode.REGULAR_FILE);
		}
		final int aFirst = 1;
		final int aLast = 3;

		final DirCacheBuilder b = dc.builder();
		for (int i = 0; i < ents.length; i++)
			b.add(ents[i]);
		b.finish();

		assertEquals(paths.length, dc.getEntryCount());
		for (int i = 0; i < ents.length; i++)
			assertSame(ents[i], dc.getEntry(i));

		{
			final DirCacheEntry[] aContents = dc.getEntriesWithin("a");
			assertNotNull(aContents);
			assertEquals(aLast - aFirst + 1, aContents.length);
			for (int i = aFirst, j = 0; i <= aLast; i++, j++)
				assertSame(ents[i], aContents[j]);
		}
		{
			final DirCacheEntry[] aContents = dc.getEntriesWithin("a/");
			assertNotNull(aContents);
			assertEquals(aLast - aFirst + 1, aContents.length);
			for (int i = aFirst, j = 0; i <= aLast; i++, j++)
				assertSame(ents[i], aContents[j]);
		}
		{
			final DirCacheEntry[] aContents = dc.getEntriesWithin("");
			assertNotNull(aContents);
			assertEquals(ents.length, aContents.length);
			for (int i = 0; i < ents.length; i++)
				assertSame(ents[i], aContents[i]);
		}

		assertNotNull(dc.getEntriesWithin("a."));
		assertEquals(0, dc.getEntriesWithin("a.").length);

		assertNotNull(dc.getEntriesWithin("a0b"));
		assertEquals(0, dc.getEntriesWithin("a0b.").length);

		assertNotNull(dc.getEntriesWithin("zoo"));
		assertEquals(0, dc.getEntriesWithin("zoo.").length);
	}

