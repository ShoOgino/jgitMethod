	@Test
	public void addSubmoduleWithName() throws Exception {
		try (Git git = new Git(db)) {
			writeTrashFile("file.txt", "content");
			git.add().addFilepattern("file.txt").call();
			RevCommit commit = git.commit().setMessage("create file").call();

			SubmoduleAddCommand command = new SubmoduleAddCommand(db);
			String name = "testsub";
			command.setName(name);
			String path = "sub";
			command.setPath(path);
			String uri = db.getDirectory().toURI().toString();
			command.setURI(uri);
			ObjectId subCommit;
			try (Repository repo = command.call()) {
				assertNotNull(repo);
				subCommit = repo.resolve(Constants.HEAD);
			}

			try (SubmoduleWalk generator = SubmoduleWalk.forIndex(db)) {
				generator.loadModulesConfig();
				assertTrue(generator.next());
				assertEquals(name, generator.getModuleName());
				assertEquals(path, generator.getPath());
				assertEquals(commit, generator.getObjectId());
				assertEquals(uri, generator.getModulesUrl());
				assertEquals(path, generator.getModulesPath());
				assertEquals(uri, generator.getConfigUrl());
				try (Repository subModRepo = generator.getRepository()) {
					assertNotNull(subModRepo);
					assertEquals(subCommit, commit);
				}
			}
			Status status = Git.wrap(db).status().call();
			assertTrue(status.getAdded().contains(Constants.DOT_GIT_MODULES));
			assertTrue(status.getAdded().contains(path));
		}
	}

