	@Test
	public void testlogAllRefUpdates() throws Exception {
		long commitTime = 1154236443000L;
		int tz = -4 * 60;

		// check that there are no entries in the reflog and turn off writing
		// reflogs
		assertTrue(db.getReflogReader(Constants.HEAD).getReverseEntries()
				.isEmpty());
		final FileBasedConfig cfg = db.getConfig();
		cfg.setBoolean("core", null, "logallrefupdates", false);
		cfg.save();

		// do one commit and check that reflog size is 0: no reflogs should be
		// written
		commit("A Commit\n", commitTime, tz);
		commitTime += 60 * 1000;
		assertTrue("Reflog for HEAD still contain no entry", db
				.getReflogReader(Constants.HEAD).getReverseEntries().isEmpty());

		// set the logAllRefUpdates parameter to true and check it
		cfg.setBoolean("core", null, "logallrefupdates", true);
		cfg.save();
		assertEquals(CoreConfig.LogRefUpdates.TRUE,
				cfg.getEnum(ConfigConstants.CONFIG_CORE_SECTION, null,
						ConfigConstants.CONFIG_KEY_LOGALLREFUPDATES,
						CoreConfig.LogRefUpdates.FALSE));

		// do one commit and check that reflog size is increased to 1
		commit("A Commit\n", commitTime, tz);
		commitTime += 60 * 1000;
		assertTrue(
				"Reflog for HEAD should contain one entry",
				db.getReflogReader(Constants.HEAD).getReverseEntries().size() == 1);

		// set the logAllRefUpdates parameter to false and check it
		cfg.setBoolean("core", null, "logallrefupdates", false);
		cfg.save();
		assertEquals(CoreConfig.LogRefUpdates.FALSE,
				cfg.getEnum(ConfigConstants.CONFIG_CORE_SECTION, null,
						ConfigConstants.CONFIG_KEY_LOGALLREFUPDATES,
						CoreConfig.LogRefUpdates.TRUE));

		// do one commit and check that reflog size is 2
		commit("A Commit\n", commitTime, tz);
		commitTime += 60 * 1000;
		assertTrue(
				"Reflog for HEAD should contain two entries",
				db.getReflogReader(Constants.HEAD).getReverseEntries().size() == 2);

		// set the logAllRefUpdates parameter to false and check it
		cfg.setEnum("core", null, "logallrefupdates",
				CoreConfig.LogRefUpdates.ALWAYS);
		cfg.save();
		assertEquals(CoreConfig.LogRefUpdates.ALWAYS,
				cfg.getEnum(ConfigConstants.CONFIG_CORE_SECTION, null,
						ConfigConstants.CONFIG_KEY_LOGALLREFUPDATES,
						CoreConfig.LogRefUpdates.FALSE));

		// do one commit and check that reflog size is 3
		commit("A Commit\n", commitTime, tz);
		assertTrue("Reflog for HEAD should contain three entries",
				db.getReflogReader(Constants.HEAD).getReverseEntries()
						.size() == 3);
	}

