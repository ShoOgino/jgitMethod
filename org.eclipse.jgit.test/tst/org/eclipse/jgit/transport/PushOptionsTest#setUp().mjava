	@Before
	public void setUp() throws Exception {
		super.setUp();

		server = newRepo("server");
		client = newRepo("client");

		testProtocol = new TestProtocol<>(null,
				new ReceivePackFactory<Object>() {
					@Override
					public ReceivePack create(Object req, Repository git)
							throws ServiceNotEnabledException,
							ServiceNotAuthorizedException {
						receivePack = new ReceivePack(git);
						receivePack.setAllowPushOptions(true);
						receivePack.setAtomic(true);
						return receivePack;
					}
				});

		uri = testProtocol.register(ctx, server);

		try (ObjectInserter ins = client.newObjectInserter()) {
			obj1 = ins.insert(Constants.OBJ_BLOB, Constants.encode("test"));
			obj2 = ins.insert(Constants.OBJ_BLOB, Constants.encode("file"));
			ins.flush();
		}
	}

