	@Test
	public void parseCertFromPktLine() throws Exception {
		// Example push certificate generated by C git 2.2.0.
		String input = "001ccertificate version 0.1\n"
		+ "0041pusher Dave Borowitz <dborowitz@google.com> 1433954361 -0700\n"
		+ "0024pushee git://localhost/repo.git\n"
		+ "002anonce 1433954361-bde756572d665bba81d8\n"
		+ "0005\n"
		+ "00680000000000000000000000000000000000000000"
		+ " 6c2b981a177396fb47345b7df3e4d3f854c6bea7"
		+ " refs/heads/master\n"
		+ "0022-----BEGIN PGP SIGNATURE-----\n"
		+ "0016Version: GnuPG v1\n"
		+ "0005\n"
		+ "0045iQEcBAABAgAGBQJVeGg5AAoJEPfTicJkUdPkUggH/RKAeI9/i/LduuiqrL/SSdIa\n"
		+ "00459tYaSqJKLbXz63M/AW4Sp+4u+dVCQvnAt/a35CVEnpZz6hN4Kn/tiswOWVJf4CO7\n"
		+ "0045htNubGs5ZMwvD6sLYqKAnrM3WxV/2TbbjzjZW6Jkidz3jz/WRT4SmjGYiEO7aA+V\n"
		+ "00454ZdIS9f7sW5VsHHYlNThCA7vH8Uu48bUovFXyQlPTX0pToSgrWV3JnTxDNxfn3iG\n"
		+ "0045IL0zTY/qwVCdXgFownLcs6J050xrrBWIKqfcWr3u4D2aCLyR0v+S/KArr7ulZygY\n"
		+ "0045+SOklImn8TAZiNxhWtA6ens66IiammUkZYFv7SSzoPLFZT4dC84SmGPWgf94NoQ=\n"
		+ "000a=XFeC\n"
		+ "0020-----END PGP SIGNATURE-----\n"
		+ "0012push-cert-end\n";

		PacketLineIn pckIn = newPacketLineIn(input);
		Config cfg = new Config();
		cfg.setString("receive", null, "certnonceseed", "sekret");
		Repository db = new InMemoryRepository(
				new DfsRepositoryDescription("repo"));

		PushCertificateParser parser = new PushCertificateParser(
				db, new SignedPushConfig(cfg));
		parser.receiveHeader(pckIn, false);
		parser.addCommand(pckIn.readStringRaw());
		assertEquals(PushCertificateParser.BEGIN_SIGNATURE, pckIn.readStringRaw());
		parser.receiveSignature(pckIn);

		PushCertificate cert = parser.build();
		assertEquals("0.1", cert.getVersion());
		assertEquals("Dave Borowitz", cert.getPusherIdent().getName());
		assertEquals("dborowitz@google.com",
				cert.getPusherIdent().getEmailAddress());
		assertEquals(1433954361000L, cert.getPusherIdent().getWhen().getTime());
		assertEquals(-7 * 60, cert.getPusherIdent().getTimeZoneOffset());
		assertEquals("git://localhost/repo.git", cert.getPushee());
		assertEquals("1433954361-bde756572d665bba81d8", cert.getNonce());

		assertNotEquals(cert.getNonce(), parser.getAdvertiseNonce());
		assertEquals(PushCertificate.NonceStatus.BAD, cert.getNonceStatus());

		assertEquals(1, cert.getCommands().size());
		ReceiveCommand cmd = cert.getCommands().get(0);
		assertEquals("refs/heads/master", cmd.getRefName());
		assertEquals(ObjectId.zeroId(), cmd.getOldId());
		assertEquals("6c2b981a177396fb47345b7df3e4d3f854c6bea7",
				cmd.getNewId().name());

		assertEquals(concatPacketLines(input, 0, 6), cert.toText());

		String signature = concatPacketLines(input, 6, 17);
		assertTrue(signature.startsWith(PushCertificateParser.BEGIN_SIGNATURE));
		assertTrue(signature.endsWith(PushCertificateParser.END_SIGNATURE));
		assertEquals(signature, cert.getSignature());
	}

