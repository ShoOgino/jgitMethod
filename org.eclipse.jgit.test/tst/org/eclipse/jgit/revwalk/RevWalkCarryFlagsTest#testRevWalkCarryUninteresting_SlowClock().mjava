	/**
	 * Similar to {@link #testRevWalkCarryUninteresting_fastClock()} but the
	 * last merge commit is created so fast that he has the same creationdate as
	 * the previous commit. This will cause the underlying {@link DateRevQueue}
	 * is not able to sort the commits in a way matching the topology. A parent
	 * (one of the commits which are merged) is handled before the child (the
	 * merge commit). This makes carrying over flags more complicated
	 *
	 * @throws Exception
	 */
	@Test
	public void testRevWalkCarryUninteresting_SlowClock() throws Exception {
		final RevCommit a = commit();
		final RevCommit b = commit(a);
		final RevCommit c = commit(a);
		final RevCommit d = commit(c);
		final RevCommit e = commit(0, b, d);

		markStart(d);
		markUninteresting(e);
		assertNull("Found an unexpected commit", rw.next());
	}

