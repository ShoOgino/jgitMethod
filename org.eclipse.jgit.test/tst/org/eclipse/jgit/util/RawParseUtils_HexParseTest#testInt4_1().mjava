	@Test
	public void testInt4_1() {
		assertEquals(0, RawParseUtils.parseHexInt4((byte) '0'));
		assertEquals(1, RawParseUtils.parseHexInt4((byte) '1'));
		assertEquals(2, RawParseUtils.parseHexInt4((byte) '2'));
		assertEquals(3, RawParseUtils.parseHexInt4((byte) '3'));
		assertEquals(4, RawParseUtils.parseHexInt4((byte) '4'));
		assertEquals(5, RawParseUtils.parseHexInt4((byte) '5'));
		assertEquals(6, RawParseUtils.parseHexInt4((byte) '6'));
		assertEquals(7, RawParseUtils.parseHexInt4((byte) '7'));
		assertEquals(8, RawParseUtils.parseHexInt4((byte) '8'));
		assertEquals(9, RawParseUtils.parseHexInt4((byte) '9'));
		assertEquals(10, RawParseUtils.parseHexInt4((byte) 'a'));
		assertEquals(11, RawParseUtils.parseHexInt4((byte) 'b'));
		assertEquals(12, RawParseUtils.parseHexInt4((byte) 'c'));
		assertEquals(13, RawParseUtils.parseHexInt4((byte) 'd'));
		assertEquals(14, RawParseUtils.parseHexInt4((byte) 'e'));
		assertEquals(15, RawParseUtils.parseHexInt4((byte) 'f'));

		assertEquals(10, RawParseUtils.parseHexInt4((byte) 'A'));
		assertEquals(11, RawParseUtils.parseHexInt4((byte) 'B'));
		assertEquals(12, RawParseUtils.parseHexInt4((byte) 'C'));
		assertEquals(13, RawParseUtils.parseHexInt4((byte) 'D'));
		assertEquals(14, RawParseUtils.parseHexInt4((byte) 'E'));
		assertEquals(15, RawParseUtils.parseHexInt4((byte) 'F'));

		assertNotHex('q');
		assertNotHex(' ');
		assertNotHex('.');
	}

