	public void setup(int pathsize, int filtersize, String[] filters) {
		long t1 = System.nanoTime();
		String[] seed = { "abc", "def", "ghi", "jkl", "mno", "pqr", "stu",
				"vwx", "xyz", "\u00e5\u00e4\u00f6" };
		dc = DirCache.newInCore();
		DirCacheEditor ed = dc.editor();
		int pi = 0;
		B: for (String a : seed) {
			for (String b : seed) {
				for (String c : seed) {
					for (String d : seed) {
						for (String e : seed) {
							if (pi >= pathsize)
								break B;
							String p1 = a + "/" + b + "/" + c + "/" + d + "/"
									+ e;
							paths[pi] = p1;
							ed.add(new DirCacheEditor.PathEdit(p1) {

								@Override
								public void apply(DirCacheEntry ent) {
									ent.setFileMode(FileMode.REGULAR_FILE);
								}
							});
							++pi;
						}
					}
				}
			}
		}
		ed.finish();
		long t2 = System.nanoTime();
		if (filters != null)
			pf = PathFilterGroup.createFromStrings(filters);
		else {
			// System.out.println(dc.getEntryCount());
			String[] filterPaths = new String[filtersize];
			System.arraycopy(paths, pathsize - filtersize, filterPaths, 0,
					filtersize);
			pf = PathFilterGroup.createFromStrings(filterPaths);
		}
		long t3 = System.nanoTime();
		data = "PX\t" + (t2 - t1) / 1E9 + "\t" + (t3 - t2) / 1E9 + "\t";
		tInit = t2-t1;
	}

