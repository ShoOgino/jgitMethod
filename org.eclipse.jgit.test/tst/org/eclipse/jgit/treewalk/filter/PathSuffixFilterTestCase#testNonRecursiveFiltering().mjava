	public void testNonRecursiveFiltering() throws IOException {
		final ObjectWriter ow = new ObjectWriter(db);
		final ObjectId aSth = ow.writeBlob("a.sth".getBytes());
		final ObjectId aTxt = ow.writeBlob("a.txt".getBytes());
		final DirCache dc = DirCache.read(db);
		final DirCacheBuilder builder = dc.builder();
		final DirCacheEntry aSthEntry = new DirCacheEntry("a.sth");
		aSthEntry.setFileMode(FileMode.REGULAR_FILE);
		aSthEntry.setObjectId(aSth);
		final DirCacheEntry aTxtEntry = new DirCacheEntry("a.txt");
		aTxtEntry.setFileMode(FileMode.REGULAR_FILE);
		aTxtEntry.setObjectId(aTxt);
		builder.add(aSthEntry);
		builder.add(aTxtEntry);
		builder.finish();
		final ObjectId treeId = dc.writeTree(ow);


		final TreeWalk tw = new TreeWalk(db);
		tw.setFilter(PathSuffixFilter.create(".txt"));
		tw.addTree(treeId);

		List<String> paths = new LinkedList<String>();
		while (tw.next()) {
			paths.add(tw.getPathString());
		}

		List<String> expected =  new LinkedList<String>();
		expected.add("a.txt");

		assertEquals(expected, paths);
	}

