	@Test
	public void testSimpleIterate() throws Exception {
		final FileTreeIterator top = new FileTreeIterator(trash, db.getFS(),
				db.getConfig().get(WorkingTreeOptions.KEY));

		assertTrue(top.first());
		assertFalse(top.eof());
		assertEquals(FileMode.REGULAR_FILE.getBits(), top.mode);
		assertEquals(paths[0], nameOf(top));
		assertEquals(paths[0].length(), top.getEntryLength());
		assertEquals(mtime[0], top.getEntryLastModifiedInstant());

		top.next(1);
		assertFalse(top.first());
		assertFalse(top.eof());
		assertEquals(FileMode.REGULAR_FILE.getBits(), top.mode);
		assertEquals(paths[1], nameOf(top));
		assertEquals(paths[1].length(), top.getEntryLength());
		assertEquals(mtime[1], top.getEntryLastModifiedInstant());

		top.next(1);
		assertFalse(top.first());
		assertFalse(top.eof());
		assertEquals(FileMode.TREE.getBits(), top.mode);

		try (ObjectReader reader = db.newObjectReader()) {
			final AbstractTreeIterator sub = top.createSubtreeIterator(reader);
			assertTrue(sub instanceof FileTreeIterator);
			final FileTreeIterator subfti = (FileTreeIterator) sub;
			assertTrue(sub.first());
			assertFalse(sub.eof());
			assertEquals(paths[2], nameOf(sub));
			assertEquals(paths[2].length(), subfti.getEntryLength());
			assertEquals(mtime[2], subfti.getEntryLastModifiedInstant());

			sub.next(1);
			assertTrue(sub.eof());
			top.next(1);
			assertFalse(top.first());
			assertFalse(top.eof());
			assertEquals(FileMode.REGULAR_FILE.getBits(), top.mode);
			assertEquals(paths[3], nameOf(top));
			assertEquals(paths[3].length(), top.getEntryLength());
			assertEquals(mtime[3], top.getEntryLastModifiedInstant());

			top.next(1);
			assertTrue(top.eof());
		}
	}

