	@Test
	public void cherryPick() throws Exception {
		repo.updateRef("HEAD").link("refs/heads/master");
		RevCommit head = tr.branch("master").commit()
				.add("foo", "foo contents\n")
				.create();
		rw.parseBody(head);
		RevCommit toPick = tr.commit()
				.parent(tr.commit().create()) // Can't cherry-pick root.
				.author(new PersonIdent("Cherrypick Author", "cpa@example.com",
						tr.getDate(), tr.getTimeZone()))
				.author(new PersonIdent("Cherrypick Committer", "cpc@example.com",
						tr.getDate(), tr.getTimeZone()))
				.message("message to cherry-pick")
				.add("bar", "bar contents\n")
				.create();
		RevCommit result = tr.cherryPick(toPick);
		rw.parseBody(result);

		Ref headRef = tr.getRepository().exactRef("HEAD");
		assertEquals(result, headRef.getObjectId());
		assertTrue(headRef.isSymbolic());
		assertEquals("refs/heads/master", headRef.getLeaf().getName());

		assertEquals(1, result.getParentCount());
		assertEquals(head, result.getParent(0));
		assertEquals(toPick.getAuthorIdent(), result.getAuthorIdent());

		// Committer name/email matches default, and time was incremented.
		assertEquals(new PersonIdent(head.getCommitterIdent(), new Date(0)),
				new PersonIdent(result.getCommitterIdent(), new Date(0)));
		assertTrue(toPick.getCommitTime() < result.getCommitTime());

		assertEquals("message to cherry-pick", result.getFullMessage());
		assertEquals("foo contents\n", blobAsString(result, "foo"));
		assertEquals("bar contents\n", blobAsString(result, "bar"));
	}

