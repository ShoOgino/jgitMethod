	@Test
	@Ignore
	public void testSmudgeAndClean() throws IOException, GitAPIException {
		// @TODO: fix this test
		File clean_filter = writeTempFile("sed s/V1/@version/g -");
		File smudge_filter = writeTempFile("sed s/@version/V1/g -");

		try (Git git2 = new Git(db)) {
			StoredConfig config = git.getRepository().getConfig();
			config.setString("filter", "tstFilter", "smudge",
					"sh " + slashify(smudge_filter.getPath()));
			config.setString("filter", "tstFilter", "clean",
					"sh " + slashify(clean_filter.getPath()));
			config.save();
			writeTrashFile(".gitattributes", "*.txt filter=tstFilter");
			git2.add().addFilepattern(".gitattributes").call();
			git2.commit().setMessage("add attributes").call();

			writeTrashFile("filterTest.txt", "hello world, V1");
			git2.add().addFilepattern("filterTest.txt").call();
			git2.commit().setMessage("add filterText.txt").call();
			assertEquals(
					"[.gitattributes, mode:100644, content:*.txt filter=tstFilter][Test.txt, mode:100644, content:Some other change][filterTest.txt, mode:100644, content:hello world, @version]",
					indexState(CONTENT));

			git2.checkout().setCreateBranch(true).setName("test2").call();
			writeTrashFile("filterTest.txt", "bon giorno world, V1");
			git2.add().addFilepattern("filterTest.txt").call();
			git2.commit().setMessage("modified filterText.txt").call();

			assertTrue(git2.status().call().isClean());
			assertEquals(
					"[.gitattributes, mode:100644, content:*.txt filter=tstFilter][Test.txt, mode:100644, content:Some other change][filterTest.txt, mode:100644, content:bon giorno world, @version]",
					indexState(CONTENT));

			git2.checkout().setName("refs/heads/test").call();
			assertTrue(git2.status().call().isClean());
			assertEquals(
					"[.gitattributes, mode:100644, content:*.txt filter=tstFilter][Test.txt, mode:100644, content:Some other change][filterTest.txt, mode:100644, content:hello world, @version]",
					indexState(CONTENT));
			assertEquals("hello world, V1", read("filterTest.txt"));
		}
	}

