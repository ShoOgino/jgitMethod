	public void setUp() throws Exception {
		super.setUp();

		defaultDb = createWorkRepository();
		Git git = new Git(defaultDb);
		JGitTestUtil.writeTrashFile(defaultDb, "hello.txt", "branch world");
		git.add().addFilepattern("hello.txt").call();
		oldCommitId = git.commit().setMessage("Initial commit").call().getId();
		git.checkout().setName(BRANCH).setCreateBranch(true).call();
		git.checkout().setName("master").call();
		git.tag().setName(TAG).call();
		JGitTestUtil.writeTrashFile(defaultDb, "hello.txt", "master world");
		git.add().addFilepattern("hello.txt").call();
		git.commit().setMessage("Second commit").call();
		addRepoToClose(defaultDb);

		notDefaultDb = createWorkRepository();
		git = new Git(notDefaultDb);
		JGitTestUtil.writeTrashFile(notDefaultDb, "world.txt", "hello");
		git.add().addFilepattern("world.txt").call();
		git.commit().setMessage("Initial commit").call();
		addRepoToClose(notDefaultDb);

		groupADb = createWorkRepository();
		git = new Git(groupADb);
		JGitTestUtil.writeTrashFile(groupADb, "a.txt", "world");
		git.add().addFilepattern("a.txt").call();
		git.commit().setMessage("Initial commit").call();
		addRepoToClose(groupADb);

		groupBDb = createWorkRepository();
		git = new Git(groupBDb);
		JGitTestUtil.writeTrashFile(groupBDb, "b.txt", "world");
		git.add().addFilepattern("b.txt").call();
		git.commit().setMessage("Initial commit").call();
		addRepoToClose(groupBDb);

		resolveRelativeUris();
	}

