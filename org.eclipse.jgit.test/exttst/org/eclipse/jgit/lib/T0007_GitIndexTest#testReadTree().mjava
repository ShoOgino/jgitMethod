	@Test
	public void testReadTree() throws Exception {
		// Prepare tree
		GitIndex index = new GitIndex(db);
		writeTrashFile("a/b", "data:a/b");
		writeTrashFile("a:b", "data:a:b");
		writeTrashFile("a.b", "data:a.b");
		index.add(trash, new File(trash, "a/b"));
		index.add(trash, new File(trash, "a:b"));
		index.add(trash, new File(trash, "a.b"));
		index.write();

		ObjectId id = index.writeTree();
		System.out.println("wrote id " + id);
		assertEquals("c696abc3ab8e091c665f49d00eb8919690b3aec3", id.name());
		GitIndex index2 = new GitIndex(db);

		index2.readTree(mapTree("c696abc3ab8e091c665f49d00eb8919690b3aec3"));
		Entry[] members = index2.getMembers();
		assertEquals(3, members.length);
		assertEquals("a.b", members[0].getName());
		assertEquals("a/b", members[1].getName());
		assertEquals("a:b", members[2].getName());
		assertEquals(3, members.length);

		GitIndex indexr = new GitIndex(db);
		indexr.read();
		Entry[] membersr = indexr.getMembers();
		assertEquals(3, membersr.length);
		assertEquals("a.b", membersr[0].getName());
		assertEquals("a/b", membersr[1].getName());
		assertEquals("a:b", membersr[2].getName());
		assertEquals(3, membersr.length);

		if (canrungitstatus)
			assertEquals(0, system(trash, "git status"));
	}

