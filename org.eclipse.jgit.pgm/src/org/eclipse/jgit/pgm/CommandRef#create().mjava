	/**
	 * Create an instance of the command implementation
	 *
	 * @return a new instance of the command implementation.
	 */
	public TextBuiltin create() {
		final Constructor<? extends TextBuiltin> c;
		try {
			c = impl.getDeclaredConstructor();
		} catch (SecurityException | NoSuchMethodException e) {
			throw new RuntimeException(MessageFormat
					.format(CLIText.get().cannotCreateCommand, getName(), e));
		}
		c.setAccessible(true);

		final TextBuiltin r;
		try {
			r = c.newInstance();
		} catch (InstantiationException | IllegalAccessException
				| IllegalArgumentException | InvocationTargetException e) {
			throw new RuntimeException(MessageFormat
					.format(CLIText.get().cannotCreateCommand, getName(), e));
		}
		r.setCommandName(getName());
		return r;
	}

