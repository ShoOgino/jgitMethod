	@Override
	protected void run() {
		try (RevWalk rw = new RevWalk(db);
				TreeWalk tw = new TreeWalk(db)) {
			final ObjectId head = db.resolve(Constants.HEAD);
			if (head == null) {
				return;
			}
			RevCommit c = rw.parseCommit(head);
			CanonicalTreeParser p = new CanonicalTreeParser();
			p.reset(rw.getObjectReader(), c.getTree());
			tw.reset(); // drop the first empty tree, which we do not need here
			if (!paths.isEmpty()) {
				tw.setFilter(PathFilterGroup.createFromStrings(paths));
			}
			tw.addTree(p);
			tw.addTree(new DirCacheIterator(db.readDirCache()));
			tw.setRecursive(true);
			while (tw.next()) {
				if (filterFileMode(tw, EXECUTABLE_FILE, GITLINK, REGULAR_FILE,
						SYMLINK)) {
					outw.println(
							QuotedString.GIT_PATH.quote(tw.getPathString()));
				}
			}
		} catch (RevisionSyntaxException | IOException e) {
			throw die(e.getMessage(), e);
		}
	}

