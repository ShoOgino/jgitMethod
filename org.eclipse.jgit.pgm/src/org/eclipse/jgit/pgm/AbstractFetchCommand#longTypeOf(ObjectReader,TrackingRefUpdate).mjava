	private static String longTypeOf(ObjectReader reader,
			final TrackingRefUpdate u) {
		final RefUpdate.Result r = u.getResult();
		if (r == RefUpdate.Result.LOCK_FAILURE)
			return "[lock fail]"; //$NON-NLS-1$
		if (r == RefUpdate.Result.IO_FAILURE)
			return "[i/o error]"; //$NON-NLS-1$
		if (r == RefUpdate.Result.REJECTED)
			return "[rejected]"; //$NON-NLS-1$
		if (ObjectId.zeroId().equals(u.getNewObjectId()))
			return "[deleted]"; //$NON-NLS-1$

		if (r == RefUpdate.Result.NEW) {
			if (u.getRemoteName().startsWith(Constants.R_HEADS))
				return "[new branch]"; //$NON-NLS-1$
			else if (u.getLocalName().startsWith(Constants.R_TAGS))
				return "[new tag]"; //$NON-NLS-1$
			return "[new]"; //$NON-NLS-1$
		}

		if (r == RefUpdate.Result.FORCED) {
			final String aOld = safeAbbreviate(reader, u.getOldObjectId());
			final String aNew = safeAbbreviate(reader, u.getNewObjectId());
			return aOld + "..." + aNew; //$NON-NLS-1$
		}

		if (r == RefUpdate.Result.FAST_FORWARD) {
			final String aOld = safeAbbreviate(reader, u.getOldObjectId());
			final String aNew = safeAbbreviate(reader, u.getNewObjectId());
			return aOld + ".." + aNew; //$NON-NLS-1$
		}

		if (r == RefUpdate.Result.NO_CHANGE)
			return "[up to date]"; //$NON-NLS-1$
		return "[" + r.name() + "]"; //$NON-NLS-1$//$NON-NLS-2$
	}

