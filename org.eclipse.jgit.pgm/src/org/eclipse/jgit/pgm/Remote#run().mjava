	/** {@inheritDoc} */
	@Override
	protected void run() {
		try (Git git = new Git(db)) {
			if (command == null) {
				RemoteListCommand cmd = git.remoteList();
				List<RemoteConfig> remotes = cmd.call();
				print(remotes);
				return;
			}
			switch (command) {
			case "add": //$NON-NLS-1$
				RemoteAddCommand add = git.remoteAdd();
				add.setName(name);
				add.setUri(new URIish(uri));
				add.call();
				break;
			case "remove": //$NON-NLS-1$
			case "rm": //$NON-NLS-1$
				RemoteRemoveCommand rm = git.remoteRemove();
				rm.setRemoteName(name);
				rm.call();
				break;
			case "set-url": //$NON-NLS-1$
				RemoteSetUrlCommand remoteSetUrl = git.remoteSetUrl();
				remoteSetUrl.setRemoteName(name);
				remoteSetUrl.setRemoteUri(new URIish(uri));
				remoteSetUrl.setUriType(push ? UriType.PUSH : UriType.FETCH);
				remoteSetUrl.call();
				break;
			case "update": //$NON-NLS-1$
				Fetch fetch = new Fetch();
				fetch.init(db, gitdir);
				StringWriter osw = new StringWriter();
				fetch.outw = new ThrowingPrintWriter(osw);
				StringWriter esw = new StringWriter();
				fetch.errw = new ThrowingPrintWriter(esw);
				List<String> fetchArgs = new ArrayList<>();
				if (verbose) {
					fetchArgs.add("--verbose"); //$NON-NLS-1$
				}
				if (prune) {
					fetchArgs.add("--prune"); //$NON-NLS-1$
				}
				if (name != null) {
					fetchArgs.add(name);
				}
				fetch.execute(fetchArgs.toArray(new String[0]));
				fetch.outw.flush();
				fetch.errw.flush();
				outw.println(osw.toString());
				errw.println(esw.toString());
				break;
			default:
				throw new JGitInternalException(MessageFormat
						.format(CLIText.get().unknownSubcommand, command));
			}
		} catch (Exception e) {
			throw die(e.getMessage(), e);
		}
	}

