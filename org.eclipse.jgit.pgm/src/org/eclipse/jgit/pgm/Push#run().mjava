	/** {@inheritDoc} */
	@Override
	protected void run() {
		try (Git git = new Git(db)) {
			PushCommand push = git.push();
			push.setDryRun(dryRun);
			push.setForce(force);
			push.setProgressMonitor(new TextProgressMonitor(errw));
			push.setReceivePack(receivePack);
			push.setRefSpecs(refSpecs);
			if (all)
				push.setPushAll();
			if (tags)
				push.setPushTags();
			push.setRemote(remote);
			push.setThin(thin);
			push.setAtomic(atomic);
			push.setTimeout(timeout);
			if (!pushOptions.isEmpty()) {
				push.setPushOptions(pushOptions);
			}
			Iterable<PushResult> results = push.call();
			for (PushResult result : results) {
				try (ObjectReader reader = db.newObjectReader()) {
					printPushResult(reader, result.getURI(), result);
				}
			}
		} catch (GitAPIException | IOException e) {
			throw die(e.getMessage(), e);
		}
	}

