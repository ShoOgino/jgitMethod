	@Override
	protected void run() throws Exception {
		if (createBranch) {
			final ObjectId head = db.resolve(Constants.HEAD);
			if (head == null)
				throw die(CLIText.get().onBranchToBeBorn);
		}

		CheckoutCommand command = new Git(db).checkout();
		command.setCreateBranch(createBranch);
		command.setName(name);
		command.setForce(force);
		try {
			String oldBranch = db.getBranch();
			Ref ref = command.call();
			if (ref == null)
				return;
			if (Repository.shortenRefName(ref.getName()).equals(oldBranch)) {
				outw.println(MessageFormat.format(
						CLIText.get().alreadyOnBranch,
						name));
				return;
			}
			if (createBranch)
				outw.println(MessageFormat.format(
						CLIText.get().switchedToNewBranch,
						Repository.shortenRefName(ref.getName())));
			else
				outw.println(MessageFormat.format(
						CLIText.get().switchedToBranch,
						Repository.shortenRefName(ref.getName())));
		} catch (RefNotFoundException e) {
			outw.println(MessageFormat.format(
					CLIText.get().pathspecDidNotMatch,
					name));
		} catch (RefAlreadyExistsException e) {
			throw die(MessageFormat.format(CLIText.get().branchAlreadyExists,
					name));
		}
	}

