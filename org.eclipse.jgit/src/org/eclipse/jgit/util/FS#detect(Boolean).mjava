	/**
	 * Auto-detect the appropriate file system abstraction, taking into account
	 * the presence of a Cygwin installation on the system. Using jgit in
	 * combination with Cygwin requires a more elaborate (and possibly slower)
	 * resolution of file system paths.
	 *
	 * @param cygwinUsed
	 *            <ul>
	 *            <li><code>Boolean.TRUE</code> to assume that Cygwin is used in
	 *            combination with jgit</li>
	 *            <li><code>Boolean.FALSE</code> to assume that Cygwin is
	 *            <b>not</b> used with jgit</li>
	 *            <li><code>null</code> to auto-detect whether a Cygwin
	 *            installation is present on the system and in this case assume
	 *            that Cygwin is used</li>
	 *            </ul>
	 *
	 *            Note: this parameter is only relevant on Windows.
	 *
	 * @return detected file system abstraction
	 */
	public static FS detect(Boolean cygwinUsed) {
		if (factory == null) {
			try {
				Class<?> activatorClass = Class
						.forName("org.eclipse.jgit.util.Java7FSFactory"); //$NON-NLS-1$
				// found Java7
				factory = (FSFactory) activatorClass.newInstance();
			} catch (ClassNotFoundException e) {
				// Java7 module not found
				// Silently ignore failure to find Java7 FS factory
				factory = new FS.FSFactory();
			} catch (UnsupportedClassVersionError e) {
				factory = new FS.FSFactory();
			} catch (InstantiationException e) {
				factory = new FS.FSFactory();
			} catch (IllegalAccessException e) {
				factory = new FS.FSFactory();
			}
		}
		return factory.detect(cygwinUsed);
	}

