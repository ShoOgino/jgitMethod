	@Override
	public void run() {
		try {
			final byte[] buf = new byte[BUFFER_SIZE];
			int interruptCounter = 0;
			for (;;) {
				try {
					if (interruptCounter > 0) {
						dst.flush();
						interruptCounter--;
					}

					if (done)
						break;

					final int n;
					try {
						n = src.read(buf);
					} catch (InterruptedIOException wakey) {
						interruptCounter++;
						continue;
					}
					if (n < 0)
						break;

					boolean writeInterrupted = false;
					for (;;) {
						try {
							dst.write(buf, 0, n);
						} catch (InterruptedIOException wakey) {
							writeInterrupted = true;
							continue;
						}

						// set interrupt status, which will be checked
						// when we block in src.read
						if (writeInterrupted)
							interrupt();
						break;
					}
				} catch (IOException e) {
					break;
				}
			}
		} finally {
			try {
				src.close();
			} catch (IOException e) {
				// Ignore IO errors on close
			}
			try {
				dst.close();
			} catch (IOException e) {
				// Ignore IO errors on close
			}
		}
	}

