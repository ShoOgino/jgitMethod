		private static Optional<Duration> measureFsTimestampResolution(
			FileStore s, Path dir) {
			Path probe = dir.resolve(".probe-" + UUID.randomUUID()); //$NON-NLS-1$
			try {
				Files.createFile(probe);
				long wait = 512;
				long start = System.nanoTime();
				FileTime t1 = Files.getLastModifiedTime(probe);
				FileTime t2 = t1;
				while (t2.compareTo(t1) <= 0) {
					TimeUnit.NANOSECONDS.sleep(wait);
					checkTimeout(s, start);
					FileUtils.touch(probe);
					t2 = Files.getLastModifiedTime(probe);
					if (wait < 100_000_000L) {
						wait = wait * 2;
					}
				}
				return Optional
						.of(Duration.between(t1.toInstant(), t2.toInstant()));
			} catch (IOException | TimeoutException e) {
				LOG.error(e.getLocalizedMessage(), e);
			} catch (InterruptedException e) {
				LOG.error(e.getLocalizedMessage(), e);
				Thread.currentThread().interrupt();
			} finally {
				deleteProbe(probe);
			}
			return Optional.empty();
		}

