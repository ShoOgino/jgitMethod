	@Override
	void materialize(final WindowCursor curs) throws IOException {
		if (cachedBytes != null) {
			return;
		}

		if (objectType != OBJ_COMMIT) {
			UnpackedObjectCache.Entry cache = pack.readCache(objectOffset);
			if (cache != null) {
				curs.release();
				objectType = cache.type;
				objectSize = cache.data.length;
				cachedBytes = cache.data;
				return;
			}
		}

		try {
			final PackedObjectLoader baseLoader = getBaseLoader(curs);
			baseLoader.materialize(curs);
			cachedBytes = BinaryDelta.apply(baseLoader.getCachedBytes(), pack
					.decompress(objectOffset + headerSize, deltaSize, curs));
			curs.release();
			objectType = baseLoader.getType();
			objectSize = cachedBytes.length;
			if (objectType != OBJ_COMMIT)
				pack.saveCache(objectOffset, cachedBytes, objectType);
		} catch (DataFormatException dfe) {
			final CorruptObjectException coe;
			coe = new CorruptObjectException(MessageFormat.format(JGitText.get().objectAtHasBadZlibStream,
					objectOffset, pack.getPackFile()));
			coe.initCause(dfe);
			throw coe;
		}
	}

