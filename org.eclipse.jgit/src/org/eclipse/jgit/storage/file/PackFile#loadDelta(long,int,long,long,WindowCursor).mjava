	private ObjectLoader loadDelta(long posSelf, int hdrLen, long sz,
			long posBase, WindowCursor curs) throws IOException,
			DataFormatException {
		if (Integer.MAX_VALUE <= sz)
			return largeDelta(posSelf, hdrLen, posBase, curs);

		byte[] base;
		int type;

		DeltaBaseCache.Entry e = DeltaBaseCache.get(this, posBase);
		if (e != null) {
			base = e.data;
			type = e.type;
		} else {
			ObjectLoader p = load(curs, posBase);
			try {
				base = p.getCachedBytes(curs.getStreamFileThreshold());
			} catch (LargeObjectException tooBig) {
				return largeDelta(posSelf, hdrLen, posBase, curs);
			}
			type = p.getType();
			DeltaBaseCache.store(this, posBase, base, type);
		}

		final byte[] delta;
		try {
			delta = new byte[(int) sz];
		} catch (OutOfMemoryError tooBig) {
			return largeDelta(posSelf, hdrLen, posBase, curs);
		}

		decompress(posSelf + hdrLen, curs, delta, 0, delta.length);
		sz = BinaryDelta.getResultSize(delta);
		if (Integer.MAX_VALUE <= sz)
			return largeDelta(posSelf, hdrLen, posBase, curs);

		final byte[] result;
		try {
			result = new byte[(int) sz];
		} catch (OutOfMemoryError tooBig) {
			return largeDelta(posSelf, hdrLen, posBase, curs);
		}

		BinaryDelta.apply(base, delta, result);
		return new ObjectLoader.SmallObject(type, result);
	}

