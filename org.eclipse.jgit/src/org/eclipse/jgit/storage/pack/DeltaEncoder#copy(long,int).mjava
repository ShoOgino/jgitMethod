	/**
	 * Create a copy instruction to copy from the base object.
	 *
	 * @param offset
	 *            position in the base object to copy from. This is absolute,
	 *            from the beginning of the base.
	 * @param cnt
	 *            number of bytes to copy.
	 * @throws IOException
	 *             the instruction buffer cannot store the instructions.
	 */
	public void copy(long offset, int cnt) throws IOException {
		if (cnt > MAX_COPY) {
			copy(offset, MAX_COPY);
			offset += MAX_COPY;
			cnt -= MAX_COPY;
		}

		int cmd = 0x80;
		int p = 1;

		if ((offset & 0xff) != 0) {
			cmd |= 0x01;
			buf[p++] = (byte) (offset & 0xff);
		}
		if ((offset & (0xff << 8)) != 0) {
			cmd |= 0x02;
			buf[p++] = (byte) ((offset >>> 8) & 0xff);
		}
		if ((offset & (0xff << 16)) != 0) {
			cmd |= 0x04;
			buf[p++] = (byte) ((offset >>> 16) & 0xff);
		}
		if ((offset & (0xff << 24)) != 0) {
			cmd |= 0x08;
			buf[p++] = (byte) ((offset >>> 24) & 0xff);
		}

		if (cnt != 0x10000) {
			if ((cnt & 0xff) != 0) {
				cmd |= 0x10;
				buf[p++] = (byte) (cnt & 0xff);
			}
			if ((cnt & (0xff << 8)) != 0) {
				cmd |= 0x20;
				buf[p++] = (byte) ((cnt >>> 8) & 0xff);
			}
			if ((cnt & (0xff << 16)) != 0) {
				cmd |= 0x40;
				buf[p++] = (byte) ((cnt >>> 16) & 0xff);
			}
		}

		buf[0] = (byte) cmd;
		out.write(buf, 0, p);
		size += p;
	}

