	private static int deltaSizeLimit(DeltaWindowEntry res, int maxDepth,
			DeltaWindowEntry src) {
		// Ideally the delta is at least 50% of the original size,
		// but we also want to account for delta header overhead in
		// the pack file (to point to the delta base) so subtract off
		// some of those header bytes from the limit.
		//
		final int limit = res.size() / 2 - 20;

		// Distribute the delta limit over the entire chain length.
		// This is weighted such that deeper items in the chain must
		// be even smaller than if they were earlier in the chain, as
		// they cost significantly more to unpack due to the increased
		// number of recursive unpack calls.
		//
		final int remainingDepth = maxDepth - src.depth();
		return (limit * remainingDepth) / maxDepth;
	}

