	PatienceDiffIndex(HashedSequenceComparator<S> cmp, //
			HashedSequence<S> a, //
			HashedSequence<S> b, //
			Edit region, //
			long[] pCommon, int pIdx, int pCnt) {
		this.cmp = cmp;
		this.a = a;
		this.b = b;
		this.region = region;
		this.pCommon = pCommon;
		this.pBegin = pIdx;
		this.pEnd = pCnt;

		final int sz = region.getLengthB();
		final int tableBits = tableBits(sz);
		table = new int[1 << tableBits];
		keyShift = 32 - tableBits;

		// As we insert elements we preincrement so that 0 is never a
		// valid entry. Therefore we have to allocate one extra space.
		//
		ptrs = new long[1 + sz];
		next = new int[ptrs.length];
	}

