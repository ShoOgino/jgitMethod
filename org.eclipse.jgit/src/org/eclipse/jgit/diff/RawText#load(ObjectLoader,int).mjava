	/**
	 * Read a blob object into RawText, or throw BinaryBlobException if
	 * the blob is binary.
	 *
	 * @param ldr
	 *   the ObjectLoader for the blob
	 * @param threshold
	 *   if the blob is larger than this size, it is always assumed to be binary.
	 * @since 4.10
	 * @return the RawText representing the blob.
	 * @throws BinaryBlobException if the blob contains binary data.
	 * @throws IOException if the input could not be read.
	 */
	public static RawText load(ObjectLoader ldr, int threshold) throws IOException, BinaryBlobException {
		long sz = ldr.getSize();

		if (sz > threshold) {
			throw new BinaryBlobException();
		}

		if (sz <= FIRST_FEW_BYTES) {
			byte[] data = ldr.getCachedBytes(FIRST_FEW_BYTES);
			if (isBinary(data)) {
				throw new BinaryBlobException();
			}
			return new RawText(data);
		}

		byte[] head = new byte[FIRST_FEW_BYTES];
		try (InputStream stream = ldr.openStream()) {
			int off = 0;
			int left = head.length;
			while (left > 0) {
				int n = stream.read(head, off, left);
				if (n < 0) {
					throw new EOFException();
				}
				left -= n;

				while (n > 0) {
					if (head[off] == '\0') {
						throw new BinaryBlobException();
					}
					off++;
					n--;
				}
			}

			byte data[];
			try {
				data = new byte[(int)sz];
			} catch (OutOfMemoryError e) {
				throw new LargeObjectException.OutOfMemory(e);
			}

			System.arraycopy(head, 0, data, 0, head.length);
			IO.readFully(stream, data, off, (int) (sz-off));
			return new RawText(data);
		}
	}

