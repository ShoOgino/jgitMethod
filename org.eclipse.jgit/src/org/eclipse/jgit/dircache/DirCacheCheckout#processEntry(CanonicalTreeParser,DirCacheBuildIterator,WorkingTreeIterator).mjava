	/**
	 * Processing an entry in the context of {@link #prescanOneTree()} when only
	 * one tree is given
	 *
	 * @param m the tree to merge
	 * @param i the index
	 * @param f the working tree
	 */
	void processEntry(CanonicalTreeParser m, DirCacheBuildIterator i,
			WorkingTreeIterator f) {
		if (m != null) {
			if (i == null || f == null || !m.idEqual(i)
					|| f.isModified(i.getDirCacheEntry(), true,
							config_filemode(), repo.getFS())) {
				update(m.getEntryPathString(), m.getEntryObjectId(),
						m.getEntryFileMode());
			} else
				keep(i.getDirCacheEntry());
		} else {
			if (f != null) {
				if (walk.isDirectoryFileConflict()) {
					conflicts.add(walk.getPathString());
				} else {
					if (i != null) {
						// ... and the working dir contained a file or folder ->
						// add it to the removed set and remove it from
						// conflicts set
						remove(i.getEntryPathString());
						conflicts.remove(i.getEntryPathString());
					}
				}
			} else
				keep(i.getDirCacheEntry());
		}
	}

