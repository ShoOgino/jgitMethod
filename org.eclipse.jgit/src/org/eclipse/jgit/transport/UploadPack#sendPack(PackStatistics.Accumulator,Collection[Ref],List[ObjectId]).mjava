	/**
	 * Send the requested objects to the client.
	 *
	 * @param accumulator
	 *                where to write statistics about the content of the pack.
	 * @param allTags
	 *                refs to search for annotated tags to include in the pack
	 *                if the {@link #OPTION_INCLUDE_TAG} capability was
	 *                requested.
	 * @param unshallowCommits
	 *                shallow commits on the client that are now becoming
	 *                unshallow
	 * @throws IOException
	 *                if an error occured while generating or writing the pack.
	 */
	private void sendPack(PackStatistics.Accumulator accumulator,
			@Nullable Collection<Ref> allTags,
			List<ObjectId> unshallowCommits) throws IOException {
		final boolean sideband = options.contains(OPTION_SIDE_BAND)
				|| options.contains(OPTION_SIDE_BAND_64K);
		if (sideband) {
			try {
				sendPack(true, accumulator, allTags, unshallowCommits);
			} catch (ServiceMayNotContinueException noPack) {
				// This was already reported on (below).
				throw noPack;
			} catch (IOException err) {
				if (reportInternalServerErrorOverSideband())
					throw new UploadPackInternalServerErrorException(err);
				else
					throw err;
			} catch (RuntimeException err) {
				if (reportInternalServerErrorOverSideband())
					throw new UploadPackInternalServerErrorException(err);
				else
					throw err;
			} catch (Error err) {
				if (reportInternalServerErrorOverSideband())
					throw new UploadPackInternalServerErrorException(err);
				else
					throw err;
			}
		} else {
			sendPack(false, accumulator, allTags, unshallowCommits);
		}
	}

