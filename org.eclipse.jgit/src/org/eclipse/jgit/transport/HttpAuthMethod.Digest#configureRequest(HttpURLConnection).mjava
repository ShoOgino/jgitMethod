		@SuppressWarnings("boxing")
		@Override
		void configureRequest(final HttpURLConnection conn) throws IOException {
			final Map<String, String> r = new LinkedHashMap<String, String>();

			final String realm = params.get("realm");
			final String nonce = params.get("nonce");
			final String cnonce = params.get("cnonce");
			final String uri = uri(conn.getURL());
			final String qop = params.get("qop");
			final String method = conn.getRequestMethod();

			final String A1 = user + ":" + realm + ":" + pass;
			final String A2 = method + ":" + uri;

			r.put("username", user);
			r.put("realm", realm);
			r.put("nonce", nonce);
			r.put("uri", uri);

			final String response, nc;
			if ("auth".equals(qop)) {
				nc = String.format("%08x", ++requestCount);
				response = KD(H(A1), nonce + ":" + nc + ":" + cnonce + ":"
						+ qop
						+ ":"
						+ H(A2));
			} else {
				nc = null;
				response = KD(H(A1), nonce + ":" + H(A2));
			}
			r.put("response", response);
			if (params.containsKey("algorithm"))
				r.put("algorithm", "MD5");
			if (cnonce != null && qop != null)
				r.put("cnonce", cnonce);
			if (params.containsKey("opaque"))
				r.put("opaque", params.get("opaque"));
			if (qop != null)
				r.put("qop", qop);
			if (nc != null)
				r.put("nc", nc);

			StringBuilder v = new StringBuilder();
			for (Map.Entry<String, String> e : r.entrySet()) {
				if (v.length() > 0)
					v.append(", ");
				v.append(e.getKey());
				v.append('=');
				v.append('"');
				v.append(e.getValue());
				v.append('"');
			}
			conn.setRequestProperty(HDR_AUTHORIZATION, NAME + " " + v);
		}

