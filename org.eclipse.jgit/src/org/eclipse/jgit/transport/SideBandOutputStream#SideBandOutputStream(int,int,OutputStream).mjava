	/**
	 * Create a new stream to write side band packets.
	 *
	 * @param chan
	 *            channel number to prefix all packets with, so the remote side
	 *            can demultiplex the stream and get back the original data.
	 *            Must be in the range [1, 255].
	 * @param sz
	 *            maximum size of a data packet within the stream. The remote
	 *            side needs to agree to the packet size to prevent buffer
	 *            overflows. Must be in the range [HDR_SIZE + 1, MAX_BUF).
	 * @param os
	 *            stream that the packets are written onto. This stream should
	 *            be attached to a SideBandInputStream on the remote side.
	 */
	public SideBandOutputStream(final int chan, final int sz, final OutputStream os) {
		if (chan <= 0 || chan > 255)
			throw new IllegalArgumentException(MessageFormat.format(
					JGitText.get().channelMustBeInRange1_255,
					Integer.valueOf(chan)));
		if (sz <= HDR_SIZE)
			throw new IllegalArgumentException(MessageFormat.format(
					JGitText.get().packetSizeMustBeAtLeast,
					Integer.valueOf(sz), Integer.valueOf(HDR_SIZE)));
		else if (MAX_BUF < sz)
			throw new IllegalArgumentException(MessageFormat.format(
					JGitText.get().packetSizeMustBeAtMost, Integer.valueOf(sz),
					Integer.valueOf(MAX_BUF)));

		out = os;
		buffer = new byte[sz];
		buffer[4] = (byte) chan;
		cnt = HDR_SIZE;
	}

