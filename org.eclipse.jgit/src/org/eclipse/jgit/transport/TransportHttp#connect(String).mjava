	private HttpURLConnection connect(final String service)
			throws TransportException, NotSupportedException {
		final URL u;
		try {
			final StringBuilder b = new StringBuilder();
			b.append(baseUrl);

			if (b.charAt(b.length() - 1) != '/')
				b.append('/');
			b.append(Constants.INFO_REFS);

			b.append(b.indexOf("?") < 0 ? '?' : '&');
			b.append("service=");
			b.append(service);

			u = new URL(b.toString());
		} catch (MalformedURLException e) {
			throw new NotSupportedException("Invalid URL " + uri, e);
		}

		try {
			final HttpURLConnection conn = httpOpen(u);
			String expType = "application/x-" + service + "-advertisement";
			conn.setRequestProperty(HDR_ACCEPT, expType + ", */*");
			final int status = HttpSupport.response(conn);
			switch (status) {
			case HttpURLConnection.HTTP_OK:
				return conn;

			case HttpURLConnection.HTTP_NOT_FOUND:
				throw new NoRemoteRepositoryException(uri, u + " not found");

			case HttpURLConnection.HTTP_FORBIDDEN:
				throw new TransportException(uri, service + " not permitted");

			default:
				String err = status + " " + conn.getResponseMessage();
				throw new TransportException(uri, err);
			}
		} catch (NotSupportedException e) {
			throw e;
		} catch (TransportException e) {
			throw e;
		} catch (IOException e) {
			throw new TransportException(uri, "cannot open " + service, e);
		}
	}

