	private void checkConnectivity() throws IOException {
		final ObjectWalk ow = new ObjectWalk(db);
		for (final ReceiveCommand cmd : commands) {
			if (cmd.getResult() != Result.NOT_ATTEMPTED)
				continue;
			if (cmd.getType() == ReceiveCommand.Type.DELETE)
				continue;
			ow.markStart(ow.parseAny(cmd.getNewId()));
		}
		for (final Ref ref : refs.values())
			ow.markUninteresting(ow.parseAny(ref.getObjectId()));

		ObjectIdSubclassMap<ObjectId> provided =
			new ObjectIdSubclassMap<ObjectId>();
		if (ensureObjectsProvidedVisible) {
			for (ObjectId id : getBaseObjectIds()) {
				   RevObject b = ow.lookupAny(id, Constants.OBJ_BLOB);
				   if (!b.has(RevFlag.UNINTERESTING))
				     throw new MissingObjectException(b, b.getType());
			}
			for (ObjectId id : getNewObjectIds()) {
				provided.add(id);
			}
		}

		RevCommit c;
		while ((c = ow.next()) != null) {
			if (ensureObjectsProvidedVisible && !provided.contains(c))
				throw new MissingObjectException(c, Constants.TYPE_COMMIT);
		}

		RevObject o;
		while ((o = ow.nextObject()) != null) {
			if (o instanceof RevBlob && !db.hasObject(o))
				throw new MissingObjectException(o, Constants.TYPE_BLOB);

			if (ensureObjectsProvidedVisible && !provided.contains(o))
				throw new MissingObjectException(o, Constants.TYPE_BLOB);
		}
	}

