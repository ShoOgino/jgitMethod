	/**
	 * Initialize the common fields of a fetch request.
	 *
	 * @param wantIds
	 *            list of want ids
	 * @param depth
	 *            how deep to go in the tree
	 * @param clientShallowCommits
	 *            commits the client has without history
	 * @param filterSpec
	 *            the filter spec
	 * @param clientCapabilities
	 *            capabilities sent in the request
	 * @param deepenNotRefs
	 *            Requests that the shallow clone/fetch should be cut at these
	 *            specific revisions instead of a depth.
	 * @param deepenSince
	 *            Requests that the shallow clone/fetch should be cut at a
	 *            specific time, instead of depth
	 * @param agent
	 *            agent as reported by the client in the request body
	 */
	FetchRequest(@NonNull Set<ObjectId> wantIds, int depth,
			@NonNull Set<ObjectId> clientShallowCommits,
			@NonNull FilterSpec filterSpec,
			@NonNull Set<String> clientCapabilities, int deepenSince,
			@NonNull List<String> deepenNotRefs, @Nullable String agent) {
		this.wantIds = requireNonNull(wantIds);
		this.depth = depth;
		this.clientShallowCommits = requireNonNull(clientShallowCommits);
		this.filterSpec = requireNonNull(filterSpec);
		this.clientCapabilities = requireNonNull(clientCapabilities);
		this.deepenSince = deepenSince;
		this.deepenNotRefs = requireNonNull(deepenNotRefs);
		this.agent = agent;
	}

