	private void writePack(final Map<String, RemoteRefUpdate> refUpdates,
			final ProgressMonitor monitor) throws IOException {
		List<ObjectId> remoteObjects = new ArrayList<ObjectId>(getRefs().size());
		List<ObjectId> newObjects = new ArrayList<ObjectId>(refUpdates.size());

		final long start;
		final PackWriter writer = new PackWriter(transport.getPackConfig(),
				local.newObjectReader());
		try {

			for (final Ref r : getRefs())
				remoteObjects.add(r.getObjectId());
			remoteObjects.addAll(additionalHaves);
			for (final RemoteRefUpdate r : refUpdates.values()) {
				if (!ObjectId.zeroId().equals(r.getNewObjectId()))
					newObjects.add(r.getNewObjectId());
			}

			writer.setThin(thinPack);
			writer.setDeltaBaseAsOffset(capableOfsDelta);
			writer.preparePack(monitor, newObjects, remoteObjects);
			start = System.currentTimeMillis();
			writer.writePack(monitor, monitor, out);
		} finally {
			writer.release();
		}
		out.flush();
		packTransferTime = System.currentTimeMillis() - start;
	}

