	private File toTemp(final SHA1 md, final int type, long len,
			final InputStream is) throws IOException {
		boolean delete = true;
		File tmp = newTempFile();
		try (FileOutputStream fOut = new FileOutputStream(tmp)) {
			try {
				OutputStream out = fOut;
				if (config.getFSyncObjectFiles()) {
					out = Channels.newOutputStream(fOut.getChannel());
				}
				DeflaterOutputStream cOut = compress(out);
				SHA1OutputStream dOut = new SHA1OutputStream(cOut, md);
				writeHeader(dOut, type, len);

				final byte[] buf = buffer();
				while (len > 0) {
					int n = is.read(buf, 0, (int) Math.min(len, buf.length));
					if (n <= 0) {
						throw shortInput(len);
					}
					dOut.write(buf, 0, n);
					len -= n;
				}
				dOut.flush();
				cOut.finish();
			} finally {
				if (config.getFSyncObjectFiles()) {
					fOut.getChannel().force(true);
				}
			}

			delete = false;
			return tmp;
		} finally {
			if (delete) {
				FileUtils.delete(tmp, FileUtils.RETRY);
			}
		}
	}

