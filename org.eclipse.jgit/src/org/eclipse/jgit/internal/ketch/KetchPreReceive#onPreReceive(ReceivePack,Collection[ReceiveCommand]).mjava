	@Override
	public void onPreReceive(ReceivePack rp, Collection<ReceiveCommand> cmds) {
		cmds = ReceiveCommand.filter(cmds, NOT_ATTEMPTED);
		if (cmds.isEmpty()) {
			return;
		}

		try {
			Proposal proposal = new Proposal(rp.getRevWalk(), cmds)
				.setPushCertificate(rp.getPushCertificate())
				.setAuthor(rp.getRefLogIdent())
				.setMessage("push"); //$NON-NLS-1$
			leader.queueProposal(proposal);
			if (proposal.isDone()) {
				// This failed fast, e.g. conflict or bad precondition.
				return;
			}

			ProgressSpinner spinner = new ProgressSpinner(
					rp.getMessageOutputStream());
			if (proposal.getState() == QUEUED) {
				waitForQueue(proposal, spinner);
			}
			if (!proposal.isDone()) {
				waitForPropose(proposal, spinner);
			}
		} catch (IOException | InterruptedException e) {
			String msg = JGitText.get().transactionAborted;
			for (ReceiveCommand cmd : cmds) {
				if (cmd.getResult() == NOT_ATTEMPTED) {
					cmd.setResult(REJECTED_OTHER_REASON, msg);
				}
			}
			log.error(msg, e);
		}
	}

