	private boolean step() throws IOException {
		if (tree == null)
			return false;

		if (sub != null) {
			if (sub.step())
				return true;
			sub = null;
		}

		if (index < 0 && !hasVisitedTree && order == Order.PREORDER) {
			hasVisitedTree = true;
			return true;
		}

		while (++index < tree.memberCount()) {
			TreeEntry e = tree.members()[index];
			if (e instanceof Tree) {
				sub = new TreeIterator((Tree) e, order, visitTreeNodes);
				if (sub.hasNextTreeEntry())
					return true;
				sub = null;
				continue;
			}
			return true;
		}

		if (index == tree.memberCount() && !hasVisitedTree
				&& order == Order.POSTORDER) {
			hasVisitedTree = true;
			return true;
		}
		return false;
	}

