	private void commitPackedRefs(final LockFile lck, final RefList<Ref> refs,
			final PackedRefList oldPackedList) throws IOException {
		new RefWriter(refs) {
			@Override
			protected void writeFile(String name, byte[] content)
					throws IOException {
				lck.setNeedStatInformation(true);
				try {
					lck.write(content);
				} catch (IOException ioe) {
					throw new ObjectWritingException("Unable to write " + name,
							ioe);
				}
				try {
					lck.waitForStatChange();
				} catch (InterruptedException e) {
					lck.unlock();
					throw new ObjectWritingException("Interrupted writing "
							+ name);
				}
				if (!lck.commit())
					throw new ObjectWritingException("Unable to write " + name);

				packedRefs.compareAndSet(oldPackedList, new PackedRefList(refs,
						content.length, lck.getCommitLastModified()));
			}
		}.writePackedRefs();
	}

