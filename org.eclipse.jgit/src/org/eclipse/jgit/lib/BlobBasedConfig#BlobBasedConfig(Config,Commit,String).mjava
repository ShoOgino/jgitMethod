	/**
	 * The constructor from commit and path
	 *
	 * @param base
	 *            the base configuration file
	 * @param commit
	 *            the commit that contains the object
	 * @param path
	 *            the path within the tree of the commit
	 * @throws FileNotFoundException
	 *             the path does not exist in the commit's tree.
	 * @throws IOException
	 *             the tree and/or blob cannot be accessed.
	 * @throws ConfigInvalidException
	 *             the blob is not a valid configuration format.
	 */
	public BlobBasedConfig(Config base, final Commit commit, final String path)
			throws FileNotFoundException, IOException, ConfigInvalidException {
		super(base);
		final ObjectId treeId = commit.getTreeId();
		final Repository r = commit.getRepository();
		final TreeWalk tree = TreeWalk.forPath(r, path, treeId);
		if (tree == null)
			throw new FileNotFoundException("Entry not found by path: " + path);
		final ObjectId blobId = tree.getObjectId(0);
		final ObjectLoader loader = tree.getRepository().openBlob(blobId);
		if (loader == null)
			throw new IOException("Blob not found: " + blobId + " for path: "
					+ path);
		fromText(RawParseUtils.decode(loader.getBytes()));
	}

