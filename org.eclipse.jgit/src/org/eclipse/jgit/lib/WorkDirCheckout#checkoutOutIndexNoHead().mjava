	private void checkoutOutIndexNoHead() throws IOException {
		new IndexTreeWalker(index, merge, root, new AbstractIndexTreeVisitor() {
			public void visitEntry(TreeEntry m, Entry i, File f) throws IOException {
				if (m == null) {
					index.remove(root, f);
					return;
				}

				boolean needsCheckout = false;
				if (i == null)
					needsCheckout = true;
				else if (i.getObjectId().equals(m.getId())) {
					if (i.isModified(root, true))
						needsCheckout = true;
				} else needsCheckout = true;

				if (needsCheckout) {
					Entry newEntry = index.addEntry(m);
					index.checkoutEntry(root, newEntry);
				}
			}
		}).walk();
	}

