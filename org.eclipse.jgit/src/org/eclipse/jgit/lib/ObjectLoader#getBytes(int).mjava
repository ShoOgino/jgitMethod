	/**
	 * Obtain a copy of the bytes of this object.
	 *
	 * If the object size is less than or equal to {@code sizeLimit} this method
	 * will provide it as a byte array, even if {@link #isLarge()} is true. This
	 * utility is useful for application code that absolutely must have the
	 * object as a single contiguous byte array in memory.
	 *
	 * Unlike {@link #getCachedBytes(int)} this method returns an array that
	 * might be modified by the caller.
	 *
	 * @param sizeLimit
	 *            maximum number of bytes to return. If the object is larger
	 *            than this limit, {@link LargeObjectException} will be thrown.
	 * @return the bytes of this object.
	 * @throws LargeObjectException
	 *             if the object is bigger than {@code sizeLimit}, or if
	 *             {@link OutOfMemoryError} occurs during allocation of the
	 *             result array. Callers should use {@link #openStream()}
	 *             instead to access the contents.
	 * @throws MissingObjectException
	 *             the object is large, and it no longer exists.
	 * @throws IOException
	 *             the object store cannot be accessed.
	 */
	public final byte[] getBytes(int sizeLimit) throws LargeObjectException,
			MissingObjectException, IOException {
		byte[] cached = getCachedBytes(sizeLimit);
		try {
			return cloneArray(cached);
		} catch (OutOfMemoryError tooBig) {
			throw new LargeObjectException.OutOfMemory(tooBig);
		}
	}

