	private void evict() {
		while (isFull()) {
			int ptr = rng.nextInt(tableSize);
			Entry<V> old = null;
			int slot = 0;
			for (int b = evictBatch - 1; b >= 0; b--, ptr++) {
				if (tableSize <= ptr)
					ptr = 0;
				for (Entry<V> e = table.get(ptr); e != null; e = e.next) {
					if (e.dead)
						continue;
					if (old == null || e.ref.lastAccess < old.ref.lastAccess) {
						old = e;
						slot = ptr;
					}
				}
			}
			if (old != null) {
				old.kill();
				gc();
				final Entry<V> e1 = table.get(slot);
				table.compareAndSet(slot, e1, clean(e1));
			}
		}
	}

