	/**
	 * Escape the value before saving
	 *
	 * @param x
	 *            the value to escape
	 * @return the escaped value
	 */
	static String escapeValue(String x) {
		if (x.isEmpty()) {
			return ""; //$NON-NLS-1$
		}

		boolean needQuote = x.charAt(0) == ' ' || x.charAt(x.length() - 1) == ' ';
		StringBuilder r = new StringBuilder(x.length());
		for (int k = 0; k < x.length(); k++) {
			char c = x.charAt(k);
			boolean thisCharNeedsQuote = true;

			// git-config(1) lists the limited set of supported escape sequences.
			switch (c) {
			case '\0':
				// Unix command line calling convention cannot pass a '\0' as an
				// argument, so there is no equivalent way in C git to store a null byte
				// in a config value.
				throw new IllegalArgumentException(
						JGitText.get().configValueContainsNullByte);

			case '\n':
				r.append('\\').append('n');
				break;

			case '\t':
				r.append('\\').append('t');
				break;

			case '\b':
				r.append('\\').append('b');
				break;

			case '\\':
			case '"':
				r.append('\\').append(c);
				break;

			case '#':
			case ';':
				r.append(c);
				break;

			default:
				thisCharNeedsQuote = false;
				r.append(c);
				break;
			}
			needQuote |= thisCharNeedsQuote;
		}

		return needQuote ? '"' + r.toString() + '"' : r.toString();
	}

