	/**
	 * Store a tag.
	 * If author, message or type is set make the tag an annotated tag.
	 *
	 * @throws IOException
	 */
	public void tag() throws IOException {
		if (getTagId() != null)
			throw new IllegalStateException("exists " + getTagId());
		final ObjectId id;
		final RefUpdate ru;

		if (tagger!=null || message!=null || type!=null) {
			ObjectId tagid = new ObjectWriter(objdb).writeTag(this);
			setTagId(tagid);
			id = tagid;
		} else {
			id = objId;
		}

		ru = objdb.updateRef(Constants.R_TAGS + getTag());
		ru.setNewObjectId(id);
		ru.setRefLogMessage("tagged " + getTag(), false);
		if (ru.forceUpdate() == RefUpdate.Result.LOCK_FAILURE)
			throw new ObjectWritingException("Unable to lock tag " + getTag());
	}

