	/**
	 * Check a commit for errors.
	 *
	 * @param raw
	 *            the commit data. The array is never modified.
	 * @throws CorruptObjectException
	 *             if any error was detected.
	 */
	public void checkCommit(final byte[] raw) throws CorruptObjectException {
		int ptr = 0;

		if ((ptr = match(raw, ptr, tree)) < 0)
			throw new CorruptObjectException(
					JGitText.get().corruptObjectNotreeHeader);
		if ((ptr = id(raw, ptr)) < 0 || raw[ptr++] != '\n')
			throw new CorruptObjectException(
					JGitText.get().corruptObjectInvalidTree);

		while (match(raw, ptr, parent) >= 0) {
			ptr += parent.length;
			if ((ptr = id(raw, ptr)) < 0 || raw[ptr++] != '\n')
				throw new CorruptObjectException(
						JGitText.get().corruptObjectInvalidParent);
		}

		if ((ptr = match(raw, ptr, author)) < 0)
			throw new CorruptObjectException(
					JGitText.get().corruptObjectNoAuthor);
		if ((ptr = personIdent(raw, ptr)) < 0 || raw[ptr++] != '\n')
			throw new CorruptObjectException(
					JGitText.get().corruptObjectInvalidAuthor);

		if ((ptr = match(raw, ptr, committer)) < 0)
			throw new CorruptObjectException(
					JGitText.get().corruptObjectNoCommitter);
		if ((ptr = personIdent(raw, ptr)) < 0 || raw[ptr++] != '\n')
			throw new CorruptObjectException(
					JGitText.get().corruptObjectInvalidCommitter);
	}

