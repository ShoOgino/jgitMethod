	/**
	 * Clear every entry from the cache.
	 *<p>
	 * This is a last-ditch effort to clear out the cache, such as before it
	 * gets replaced by another cache that is configured differently. This
	 * method tries to force every cached entry through {@link #clear(Ref)} to
	 * ensure that resources are correctly accounted for and cleaned up by the
	 * subclass. A concurrent reader loading entries while this method is
	 * running may cause resource accounting failures.
	 */
	void removeAll() {
		for (int s = 0; s < tableSize; s++) {
			Entry<V> e1;
			do {
				e1 = table.get(s);
				for (Entry<V> e = e1; e != null; e = e.next)
					e.kill();
			} while (!table.compareAndSet(s, e1, null));
		}
		gc();
	}

