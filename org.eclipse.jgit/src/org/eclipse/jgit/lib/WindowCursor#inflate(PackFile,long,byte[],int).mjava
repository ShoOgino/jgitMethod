	/**
	 * Pump bytes into the supplied inflater as input.
	 * 
	 * @param pack
	 *            the file the desired window is stored within.
	 * @param position
	 *            position within the file to read from.
	 * @param dstbuf
	 *            destination buffer the inflater should output decompressed
	 *            data to.
	 * @param dstoff
	 *            current offset within <code>dstbuf</code> to inflate into.
	 * @return updated <code>dstoff</code> based on the number of bytes
	 *         successfully inflated into <code>dstbuf</code>.
	 * @throws IOException
	 *             this cursor does not match the provider or id and the proper
	 *             window could not be acquired through the provider's cache.
	 * @throws DataFormatException
	 *             the inflater encountered an invalid chunk of data. Data
	 *             stream corruption is likely.
	 */
	int inflate(final PackFile pack, long position, final byte[] dstbuf,
			int dstoff) throws IOException, DataFormatException {
		if (inf == null)
			inf = InflaterCache.get();
		else
			inf.reset();
		for (;;) {
			pin(pack, position);
			dstoff = window.inflate(position, dstbuf, dstoff, inf);
			if (inf.finished())
				return dstoff;
			position = window.end;
		}
	}

