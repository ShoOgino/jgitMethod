	private void writeObject(final LocalObjectToPack otp) throws IOException {
		otp.markWantWrite();
		if (otp.isDeltaRepresentation()) {
			LocalObjectToPack deltaBase = (LocalObjectToPack)otp.getDeltaBase();
			assert deltaBase != null || thin;
			if (deltaBase != null && !deltaBase.isWritten()) {
				if (deltaBase.wantWrite()) {
					otp.clearDeltaBase(); // cycle detected
					otp.clearSourcePack();
				} else {
					writeObject(deltaBase);
				}
			}
		}

		assert !otp.isWritten();

		out.resetCRC32();
		otp.setOffset(out.length());

		final PackedObjectLoader reuse = open(otp);
		if (reuse != null) {
			try {
				if (otp.isDeltaRepresentation())
					writeDeltaObjectHeader(otp, reuse);
				else
					writeObjectHeader(otp.getType(), reuse.getSize());
				reuse.copyRawData(out, buf, windowCursor);
			} finally {
				reuse.endCopyRawData();
			}
		} else if (otp.isDeltaRepresentation()) {
			throw new IOException(JGitText.get().creatingDeltasIsNotImplemented);
		} else {
			writeWholeObjectDeflate(otp);
		}
		otp.setCRC(out.getCRC32());

		writeMonitor.update(1);
	}

