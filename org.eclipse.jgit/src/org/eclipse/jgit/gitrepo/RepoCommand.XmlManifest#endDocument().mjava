		@Override
		public void endDocument() throws SAXException {
			xmlInRead--;
			if (xmlInRead != 0)
				return;

			// Only do the following after we finished reading everything.
			removeNotInGroup();
			removeOverlaps();

			Map<String, String> remoteUrls = new HashMap<String, String>();
			URI baseUri;
			try {
				baseUri = new URI(baseUrl);
			} catch (URISyntaxException e) {
				throw new SAXException(e);
			}
			for (Project proj : projects) {
				String remote = proj.remote;
				if (remote == null) {
					if (defaultRemote == null) {
						if (filename != null)
							throw new SAXException(MessageFormat.format(
									RepoText.get().errorNoDefaultFilename,
									filename));
						else
							throw new SAXException(
									RepoText.get().errorNoDefault);
					}
					remote = defaultRemote;
				}
				String remoteUrl = remoteUrls.get(remote);
				if (remoteUrl == null) {
					remoteUrl = baseUri.resolve(remotes.get(remote)).toString();
					if (!remoteUrl.endsWith("/")) //$NON-NLS-1$
						remoteUrl = remoteUrl + "/"; //$NON-NLS-1$
					remoteUrls.put(remote, remoteUrl);
				}

				command.addSubmodule(remoteUrl + proj.name,
						proj.path,
						proj.revision == null
								? defaultRevision : proj.revision,
						proj.copyfiles);
			}
		}

