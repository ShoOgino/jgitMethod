		@Override
		public void startElement(
				String uri,
				String localName,
				String qName,
				Attributes attributes) throws SAXException {
			if ("project".equals(qName)) { //$NON-NLS-1$
				currentProject = new Project(
						attributes.getValue("name"), //$NON-NLS-1$
						attributes.getValue("path"), //$NON-NLS-1$
						attributes.getValue("revision"), //$NON-NLS-1$
						attributes.getValue("remote"), //$NON-NLS-1$
						attributes.getValue("groups")); //$NON-NLS-1$
			} else if ("remote".equals(qName)) { //$NON-NLS-1$
				remotes.put(attributes.getValue("name"), //$NON-NLS-1$
						attributes.getValue("fetch")); //$NON-NLS-1$
			} else if ("default".equals(qName)) { //$NON-NLS-1$
				defaultRemote = attributes.getValue("remote"); //$NON-NLS-1$
				defaultRevision = attributes.getValue("revision"); //$NON-NLS-1$
				if (defaultRevision == null)
					defaultRevision = command.branch;
			} else if ("copyfile".equals(qName)) { //$NON-NLS-1$
				if (currentProject == null)
					throw new SAXException(RepoText.get().invalidManifest);
				currentProject.addCopyFile(new CopyFile(
							command.repo,
							currentProject.path,
							attributes.getValue("src"), //$NON-NLS-1$
							attributes.getValue("dest"))); //$NON-NLS-1$
			} else if ("include".equals(qName)) { //$NON_NLS-1$
				String name = attributes.getValue("name");
				InputStream is = null;
				if (includedReader != null) {
					try {
						is = includedReader.readIncludeFile(name);
					} catch (Exception e) {
						throw new SAXException(MessageFormat.format(
								RepoText.get().errorIncludeFile, name), e);
					}
				} else if (filename != null) {
					int index = filename.lastIndexOf('/');
					String path = filename.substring(0, index + 1) + name;
					try {
						is = new FileInputStream(path);
					} catch (IOException e) {
						throw new SAXException(MessageFormat.format(
								RepoText.get().errorIncludeFile, path), e);
					}
				}
				if (is == null) {
					throw new SAXException(
							RepoText.get().errorIncludeNotImplemented);
				}
				try {
					read(is);
				} catch (IOException e) {
					throw new SAXException(e);
				}
			}
		}

