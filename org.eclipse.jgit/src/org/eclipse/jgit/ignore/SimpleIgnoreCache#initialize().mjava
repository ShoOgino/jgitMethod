	/**
	 * Initializes the ignore map for the target file and all parents.
	 * This will delete existing ignore information for all folders
	 * on the partial initialization path. Will only function for files
	 * that are children of the cache's basePath.
	 * <br><br>
	 * Note that this does not initialize the ignore rules. Ignore rules will
	 * be parsed when needed during a call to {@link #isIgnored(String)}
	 *
	 * @throws IOException
	 *            The tree could not be walked.
	 */
	public void initialize() throws IOException {
		TreeWalk tw = new TreeWalk(repository);
		tw.reset();
		tw.addTree(new FileTreeIterator(repository.getWorkDir(), FS.DETECTED));
		tw.setRecursive(true);

		//Don't waste time trying to add iterators that already exist
		HashSet<FileTreeIterator> toAdd = new HashSet<FileTreeIterator>();
		while (tw.next()) {
			FileTreeIterator t = tw.getTree(0, FileTreeIterator.class);
			if (t.hasGitIgnore()) {
				toAdd.add(t);
				//TODO: Account for and test the removal of .gitignore files
			}
		}
		for (FileTreeIterator t : toAdd)
			addNodeFromTree(t);

		//The base is special
		//TODO: Test alternate locations for GIT_DIR
		readRulesAtBase();
	}

