	private RebaseResult abort() throws IOException {
		try {
			String commitId = readFile(repo.getDirectory(), "ORIG_HEAD");
			monitor.beginTask(MessageFormat.format(
					JGitText.get().abortingRebase, commitId),
					ProgressMonitor.UNKNOWN);

			RevCommit commit = walk.parseCommit(repo.resolve(commitId));
			// no head in order to reset --hard
			DirCacheCheckout dco = new DirCacheCheckout(repo, repo
					.lockDirCache(), commit.getTree());
			dco.setFailOnConflict(false);
			dco.checkout();
			walk.release();
		} finally {
			monitor.endTask();
		}
		try {
			String headName = readFile(rebaseDir, "head-name");
			if (headName.startsWith(Constants.R_REFS)) {
				monitor.beginTask(MessageFormat.format(
						JGitText.get().resettingHead, headName),
						ProgressMonitor.UNKNOWN);

				// update the HEAD
				RefUpdate refUpdate = repo.updateRef(Constants.HEAD, false);
				Result res = refUpdate.link(headName);
				switch (res) {
				case FAST_FORWARD:
				case FORCED:
				case NO_CHANGE:
					break;
				default:
					throw new JGitInternalException(
							JGitText.get().abortingRebaseFailed);
				}
			}
			// cleanup the files
			FileUtils.delete(rebaseDir, FileUtils.RECURSIVE);
			return new RebaseResult(Status.ABORTED);

		} finally {
			monitor.endTask();
		}
	}

