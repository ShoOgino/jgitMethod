	private Optional<Ref> getBestMatch(List<Ref> tags) {
		if (tags == null || tags.size() == 0) {
			return Optional.empty();
		} else if (matchers.size() == 0) {
			Collections.sort(tags, TAG_TIE_BREAKER);
			return Optional.of(tags.get(0));
		} else {
			// Find the first tag that matches one of the matchers; precedence according to matcher definition order
			for (IMatcher matcher : matchers) {
				Optional<Ref> match = tags.stream()
						.filter(tag -> matcher.matches(tag.getName(), false,
								false))
						.sorted(TAG_TIE_BREAKER)
						.findFirst();
				if (match.isPresent()) {
					return match;
				}
			}
			return Optional.empty();
		}
	}

