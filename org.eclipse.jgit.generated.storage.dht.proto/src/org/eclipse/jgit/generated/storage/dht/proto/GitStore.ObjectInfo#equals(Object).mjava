    @java.lang.Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.eclipse.jgit.generated.storage.dht.proto.GitStore.ObjectInfo)) {
        return super.equals(obj);
      }
      org.eclipse.jgit.generated.storage.dht.proto.GitStore.ObjectInfo other = (org.eclipse.jgit.generated.storage.dht.proto.GitStore.ObjectInfo) obj;

      boolean result = true;
      result = result && (hasObjectType() == other.hasObjectType());
      if (hasObjectType()) {
        result = result &&
            (getObjectType() == other.getObjectType());
      }
      result = result && (hasOffset() == other.hasOffset());
      if (hasOffset()) {
        result = result && (getOffset()
            == other.getOffset());
      }
      result = result && (hasPackedSize() == other.hasPackedSize());
      if (hasPackedSize()) {
        result = result && (getPackedSize()
            == other.getPackedSize());
      }
      result = result && (hasInflatedSize() == other.hasInflatedSize());
      if (hasInflatedSize()) {
        result = result && (getInflatedSize()
            == other.getInflatedSize());
      }
      result = result && (hasDeltaBase() == other.hasDeltaBase());
      if (hasDeltaBase()) {
        result = result && getDeltaBase()
            .equals(other.getDeltaBase());
      }
      result = result && (hasIsFragmented() == other.hasIsFragmented());
      if (hasIsFragmented()) {
        result = result && (getIsFragmented()
            == other.getIsFragmented());
      }
      result = result &&
          getUnknownFields().equals(other.getUnknownFields());
      return result;
    }

