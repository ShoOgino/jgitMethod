      public Builder mergeFrom(org.eclipse.jgit.generated.storage.dht.proto.GitStore.ChunkMeta other) {
        if (other == org.eclipse.jgit.generated.storage.dht.proto.GitStore.ChunkMeta.getDefaultInstance()) return this;
        if (baseChunkBuilder_ == null) {
          if (!other.baseChunk_.isEmpty()) {
            if (baseChunk_.isEmpty()) {
              baseChunk_ = other.baseChunk_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureBaseChunkIsMutable();
              baseChunk_.addAll(other.baseChunk_);
            }
            onChanged();
          }
        } else {
          if (!other.baseChunk_.isEmpty()) {
            if (baseChunkBuilder_.isEmpty()) {
              baseChunkBuilder_.dispose();
              baseChunkBuilder_ = null;
              baseChunk_ = other.baseChunk_;
              bitField0_ = (bitField0_ & ~0x00000001);
              baseChunkBuilder_ =
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getBaseChunkFieldBuilder() : null;
            } else {
              baseChunkBuilder_.addAllMessages(other.baseChunk_);
            }
          }
        }
        if (!other.fragment_.isEmpty()) {
          if (fragment_.isEmpty()) {
            fragment_ = other.fragment_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureFragmentIsMutable();
            fragment_.addAll(other.fragment_);
          }
          onChanged();
        }
        if (other.hasCommitPrefetch()) {
          mergeCommitPrefetch(other.getCommitPrefetch());
        }
        if (other.hasTreePrefetch()) {
          mergeTreePrefetch(other.getTreePrefetch());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

