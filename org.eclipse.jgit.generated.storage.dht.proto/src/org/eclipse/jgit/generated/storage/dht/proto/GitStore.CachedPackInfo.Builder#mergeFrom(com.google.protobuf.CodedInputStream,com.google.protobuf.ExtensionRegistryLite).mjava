      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              name_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              version_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              objectsTotal_ = input.readInt64();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              objectsDelta_ = input.readInt64();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              bytesTotal_ = input.readInt64();
              break;
            }
            case 50: {
              org.eclipse.jgit.generated.storage.dht.proto.GitStore.CachedPackInfo.TipObjectList.Builder subBuilder = org.eclipse.jgit.generated.storage.dht.proto.GitStore.CachedPackInfo.TipObjectList.newBuilder();
              if (hasTipList()) {
                subBuilder.mergeFrom(getTipList());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setTipList(subBuilder.buildPartial());
              break;
            }
            case 58: {
              org.eclipse.jgit.generated.storage.dht.proto.GitStore.CachedPackInfo.ChunkList.Builder subBuilder = org.eclipse.jgit.generated.storage.dht.proto.GitStore.CachedPackInfo.ChunkList.newBuilder();
              if (hasChunkList()) {
                subBuilder.mergeFrom(getChunkList());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setChunkList(subBuilder.buildPartial());
              break;
            }
          }
        }
      }

