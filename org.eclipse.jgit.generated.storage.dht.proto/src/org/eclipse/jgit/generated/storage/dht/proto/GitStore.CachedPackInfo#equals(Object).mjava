    @java.lang.Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.eclipse.jgit.generated.storage.dht.proto.GitStore.CachedPackInfo)) {
        return super.equals(obj);
      }
      org.eclipse.jgit.generated.storage.dht.proto.GitStore.CachedPackInfo other = (org.eclipse.jgit.generated.storage.dht.proto.GitStore.CachedPackInfo) obj;

      boolean result = true;
      result = result && (hasName() == other.hasName());
      if (hasName()) {
        result = result && getName()
            .equals(other.getName());
      }
      result = result && (hasVersion() == other.hasVersion());
      if (hasVersion()) {
        result = result && getVersion()
            .equals(other.getVersion());
      }
      result = result && (hasObjectsTotal() == other.hasObjectsTotal());
      if (hasObjectsTotal()) {
        result = result && (getObjectsTotal()
            == other.getObjectsTotal());
      }
      result = result && (hasObjectsDelta() == other.hasObjectsDelta());
      if (hasObjectsDelta()) {
        result = result && (getObjectsDelta()
            == other.getObjectsDelta());
      }
      result = result && (hasBytesTotal() == other.hasBytesTotal());
      if (hasBytesTotal()) {
        result = result && (getBytesTotal()
            == other.getBytesTotal());
      }
      result = result && (hasTipList() == other.hasTipList());
      if (hasTipList()) {
        result = result && getTipList()
            .equals(other.getTipList());
      }
      result = result && (hasChunkList() == other.hasChunkList());
      if (hasChunkList()) {
        result = result && getChunkList()
            .equals(other.getChunkList());
      }
      result = result &&
          getUnknownFields().equals(other.getUnknownFields());
      return result;
    }

