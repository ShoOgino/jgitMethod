	public void getMeta(Context options, Set<ChunkKey> keys,
			AsyncCallback<Map<ChunkKey, ChunkMeta>> callback) {
		Map<ChunkKey, ChunkMeta> out = new HashMap<ChunkKey, ChunkMeta>();

		for (ChunkKey chunk : keys) {
			byte[] row = chunk.asBytes();
			MemTable.Cell cell = table.get(row, colMeta.name());
			if (cell != null) {
				try {
					out.put(chunk, ChunkMeta.parseFrom(cell.getValue()));
				} catch (InvalidProtocolBufferException err) {
					callback.onFailure(new DhtException(MessageFormat.format(
							DhtText.get().invalidChunkMeta, chunk), err));
					return;
				}
			}
		}

		callback.onSuccess(out);
	}

