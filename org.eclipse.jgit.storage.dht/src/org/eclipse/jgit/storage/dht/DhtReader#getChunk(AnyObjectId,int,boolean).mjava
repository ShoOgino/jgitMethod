	ChunkAndOffset getChunk(AnyObjectId objId, int typeHint, boolean checkRecent)
			throws DhtException, MissingObjectException {
		if (checkRecent) {
			ChunkAndOffset r = recentChunks.find(repo, objId);
			if (r != null)
				return r;
		}

		ChunkKey key;
		if (objId instanceof RefDataUtil.IdWithChunk)
			key = ((RefDataUtil.IdWithChunk) objId).getChunkKey();
		else
			key = repository.getRefDatabase().findChunk(objId);

		if (key != null) {
			PackChunk chunk = load(key);
			if (chunk != null && chunk.hasIndex()) {
				int pos = chunk.findOffset(repo, objId);
				if (0 <= pos)
					return new ChunkAndOffset(chunk, pos);
			}

			// The hint above is stale. Fall through and do a
			// more exhaustive lookup to find the object.
		}

		if (prefetcher != null) {
			ChunkAndOffset r = prefetcher.find(repo, objId);
			if (r != null)
				return r;
		}

		for (ObjectInfo link : find(objId)) {
			PackChunk chunk;

			if (prefetcher != null) {
				chunk = prefetcher.get(link.getChunkKey());
				if (chunk == null) {
					chunk = load(link.getChunkKey());
					if (chunk == null)
						continue;
					if (prefetcher.isType(typeHint))
						prefetcher.push(chunk.getMeta());
				}
			} else {
				chunk = load(link.getChunkKey());
				if (chunk == null)
					continue;
			}

			return new ChunkAndOffset(chunk, link.getOffset());
		}

		throw missing(objId, typeHint);
	}

