	boolean whole(Deflater def, int type, byte[] data, int off, final int size,
			ObjectId objId) {
		if (free() < 10 || maxObjects <= objectsTotal)
			return false;

		header(type, size);
		objectsWhole++;
		currentObjectType = type;

		int endOfHeader = ptr;
		def.setInput(data, off, size);
		def.finish();
		do {
			int left = free();
			if (left == 0) {
				rollback();
				return false;
			}

			int n = def.deflate(chunkData, ptr, left);
			if (n == 0) {
				rollback();
				return false;
			}

			ptr += n;
		} while (!def.finished());

		if (objectList == null)
			objectList = new ArrayList<StoredObject>();

		final int packedSize = ptr - endOfHeader;
		objectList.add(new StoredObject(objId, type, mark, packedSize, size));

		if (objectType < 0)
			objectType = type;
		else if (objectType != type)
			objectType = ChunkInfo.OBJ_MIXED;

		return true;
	}

