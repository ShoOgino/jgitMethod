	private void putChunkIndex(List<DhtInfo> objectList, ChunkKey key, int type)
			throws DhtException {
		ChunkInfo info = infoByKey.get(key);
		info.objectsTotal = objectList.size();
		info.objectType = type;

		PackChunk.Members builder = new PackChunk.Members();
		builder.setChunkKey(key);

		byte[] index = ChunkIndex.create(objectList);
		info.indexSize = index.length;
		builder.setChunkIndex(index);

		ChunkMeta meta = dirtyMeta.remove(key);
		if (meta == null)
			meta = chunkMeta.get(key);
		if (meta == null)
			meta = new ChunkMeta(key);

		switch (type) {
		case OBJ_COMMIT: {
			Edges edges = chunkEdges.get(key);
			if (edges != null) {
				List<ChunkKey> e = edges.commitEdges;
				List<ChunkKey> s = sequentialHint(key, OBJ_COMMIT);
				meta.commitPrefetch = new ChunkMeta.PrefetchHint(e, s);
			}
			break;
		}
		case OBJ_TREE: {
			List<ChunkKey> s = sequentialHint(key, OBJ_TREE);
			meta.treePrefetch = new ChunkMeta.PrefetchHint(null, s);
			break;
		}
		}

		if (meta.isEmpty()) {
			info.metaSize = 0;
		} else {
			info.metaSize = meta.asBytes().length;
			builder.setMeta(meta);
		}

		db.repository().put(repo, info, dbWriteBuffer);
		db.chunk().put(builder, dbWriteBuffer);
	}

