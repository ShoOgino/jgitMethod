	/**
	 * Invoked after a key has been loaded. If this raises an exception, the
	 * original {@code error} is lost unless it is attached to that exception.
	 *
	 * @param uri
	 *            identifying the key resource the key was attempted to be
	 *            loaded from
	 * @param attempt
	 *            the number of times {@link #getPassphrase(URIish, int)} had
	 *            been called; zero indicates that {@code uri} refers to a
	 *            non-encrypted key
	 * @param error
	 *            {@code null} if the key was loaded successfully; otherwise an
	 *            exception indicating why the key could not be loaded
	 * @return {@code true} to re-try again; {@code false} to re-raise the
	 *         {@code error} exception; Ignored if the key was loaded
	 *         successfully, i.e., if {@code error == null}.
	 * @throws IOException
	 * @throws GeneralSecurityException
	 */
	boolean keyLoaded(URIish uri, int attempt, Exception error)
			throws IOException, GeneralSecurityException;

